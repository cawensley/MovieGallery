{"version":3,"sources":["organisms/MainNavBar.js","atoms/pageTitle.js","atoms/movieAPI.js","atoms/pageLoading.js","molecules/AddRemoveButton.js","molecules/card.js","molecules/cardlist.js","pages/favorites.js","atoms/ShowResults.js","pages/home.js","pages/details.js","organisms/footer.js","atoms/particleOptions.js","App.js","index.js"],"names":["MainNavBar","className","type","data-toggle","data-target","id","to","PageTitle","Title","movieAPI","PageLoading","AddRemoveButton","useState","isLoading","setisLoading","isFavMovie","localStorage","getItem","FavMovieArray","JSON","parse","i","length","imdbID","value","onClick","MovieArray","splice","setItem","stringify","window","location","reload","onMovieRemove","a","fetch","then","response","json","rawData","MovietoAdd","Year","Type","Poster","push","addMovietoArray","onMovieAdd","Card","alt","src","href","rel","target","Cardlist","movies","map","user","key","Favorites","useEffect","scrollTo","ShowResults","ResultsSelected","PageSelected","TotalResults","minResults","maxResults","Home","moviestoDisplay","setmoviestoDisplay","userInput","setUserInput","setPageSelected","PageArray","setPageArray","setResultsSelected","setTotalResults","FetchSuccess","setFetchSuccess","getmovieData","totalResults","wasFetchSuccess","Response","TotalPages","Math","ceil","TotalPagesArray","PagestoFetch","TotalFetches","z","TotalMoviestoDisplay","q","MovieGrouping","d","Search","size","onChange","event","onKeyPress","item","Details","movietoDisplay","setmovietoDisplay","displaymovieID","Released","Runtime","Rated","Genre","Director","Writer","Actors","imdbRating","Plot","Footer","currentYear","Date","getFullYear","toString","particleOptions","particles","number","density","enable","value_area","App","params","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57c97aef.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport \"./MainNavBar.scss\";\n\nconst MainNavBar=()=> {\n    return (\n        <nav className=\"navbar navbar-expand-md bg-dark fixed-top p-1\">\n            <h2 className=\"text-light\">Movie Gallery</h2>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\">\n                <span className=\"text-white\"><i className=\"fas fa-bars\"></i></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"navbar-brand\">\n                        <Link to=\"/\" className=\"nav-link px-3 py-1\">Search</Link>\n                    </li>\n                    <li className=\"navbar-brand\">\n                        <Link to=\"/favorites\" className=\"nav-link px-3 py-1\">Favorites</Link>\n                    </li>\n                    <li className=\"navbar-brand\">\n                        <Link to=\"/details\" className=\"nav-link px-3 py-1\">Details</Link>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    )\n};\n\nexport default MainNavBar;","import React from 'react';\n\nconst PageTitle = ({Title}) => {\n    return <h1 className=\"text-white pb-3\"><u>{Title}</u></h1>;\n};\n\nexport default PageTitle;","const movieAPI = \"bf0372ee\";\n\nexport default movieAPI;","import React from 'react';\n\nconst PageLoading = () => {\n    return (\n        <p className=\"container-fluid p-padding text-center text-white\">\n            <i className=\"fas fa-5x fa-cog fa-spin\"></i>\n        </p>)\n};\n\nexport default PageLoading;","import React,{useState} from 'react';\nimport movieAPI from \"../atoms/movieAPI\";\nimport PageLoading from \"../atoms/pageLoading\";\n\nconst AddRemoveButton = ({ id }) => {\n    const [isLoading,setisLoading]=useState(false);\n\n    var isFavMovie = false;\n    if (localStorage.getItem(\"favoriteArray\")) {\n        var FavMovieArray = JSON.parse(localStorage.getItem(\"favoriteArray\"))}\n\n    if (FavMovieArray) {\n    for (var i=0;i<FavMovieArray.length;i++) {\n        if (id===FavMovieArray[i].imdbID) {isFavMovie=true;}\n    }}\n\n    function onMovieAdd () {\n        setisLoading(true);\n        var MovieArray = [];\n        if (localStorage.getItem(\"favoriteArray\")) {\n            MovieArray = JSON.parse(localStorage.getItem(\"favoriteArray\"))}\n        async function addMovietoArray () {\n            const rawData = await fetch(`https://www.omdbapi.com/?i=${id}&apikey=${movieAPI}`)\n                .then(response => response.json());\n            let MovietoAdd={\n                Title: rawData.Title,\n                Year: rawData.Year,\n                imdbID: rawData.imdbID,\n                Type: rawData.Type,\n                Poster: rawData.Poster\n            };\n            MovieArray.push(MovietoAdd);\n            localStorage.setItem(\"favoriteArray\",JSON.stringify(MovieArray));\n            setisLoading(false);\n            window.location.reload(true);\n        }\n        addMovietoArray();\n    }\n\n    function onMovieRemove () {\n        var MovieArray = JSON.parse(localStorage.getItem(\"favoriteArray\"));\n        for (var i=0;i<MovieArray.length;i++) {\n            if (id===MovieArray[i].imdbID) {MovieArray.splice(i,1)}}\n        localStorage.setItem(\"favoriteArray\",JSON.stringify(MovieArray));\n        window.location.reload(true);\n    }\n\n    if (isLoading) {return(<PageLoading/>)}\n\n    return (!isFavMovie) ? (\n            <button type=\"submit\" value=\"Submit\" className=\"btn btn-success m-4\"\n                    onClick={()=>onMovieAdd()}>\n                    Add to Favorites\n            </button>\n        ) : (\n            <button type=\"submit\" value=\"Submit\" className=\"btn btn-danger m-4\"\n                    onClick={()=>onMovieRemove()}>\n                    Remove From Favorites\n            </button>\n    );\n};\n\nexport default AddRemoveButton;\n\n\n\n\n\n\n","import React from 'react';\nimport './card.scss';\nimport {Link} from \"react-router-dom\";\nimport AddRemoveButton from \"./AddRemoveButton\";\n\nconst Card = ({Title,Year,id,Type,Poster}) => {\n\n    return (\n        <div className=\"card d-inline-flex m-card-width m-card-hover m-1 bg-dark\">\n            <Link to=\"/details\" onClick={()=>localStorage.setItem(`movieID`,`${id}`)}>\n                <img className=\"m-cardimg-height w-100\" alt='Error Loading' src={`${Poster}`}/>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title text-warning\">{Title}</h5>\n                    <p className=\"card-text text-light\">Year: {Year}</p>\n                    <p className=\"card-text text-light\">Type: {Type}</p>\n                </div>\n            </Link>\n            <a href={`https://www.imdb.com/title/${id}/`} rel=\"noopener noreferrer\" target=\"_blank\"\n               className=\"m-cardhyperLink-color\">Imdb ID: {id}</a>\n            <AddRemoveButton id={id}/>\n        </div>\n    );\n};\n\nexport default Card;","import React from 'react';\nimport Card from './card';\n\nconst Cardlist = ({ movies }) => {\n    return (\n        <div>\n            {\n                movies.map((user, i) => {\n                    return (\n                        <Card\n                            key={i}\n                            Title={movies[i].Title}\n                            Year={movies[i].Year}\n                            id={movies[i].imdbID}\n                            Type={movies[i].Type}\n                            Poster={movies[i].Poster}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n};\n\nexport default Cardlist;","import React, {useEffect} from 'react';\nimport PageTitle from \"../atoms/pageTitle\";\nimport Cardlist from \"../molecules/cardlist\";\n\nconst Favorites = () => {\n\n    if (localStorage.getItem(\"favoriteArray\")) {\n        var FavMovieArray = JSON.parse(localStorage.getItem(\"favoriteArray\"))}\n\n    //eslint-disable-next-line\n    useEffect (()=> {window.scrollTo(0,0)},[]);\n\n    return (!FavMovieArray) ? (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Favorite Movies'}/>\n            <h2 className=\"text-warning\">No Favorites Stored</h2>\n        </div>\n    ) : (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Favorite Movies'}/>\n            <Cardlist movies={FavMovieArray}/>\n        </div>\n    );\n};\n\nexport default Favorites;","import React from 'react';\n\nconst ShowResults = ({ResultsSelected,PageSelected,TotalResults}) => {\n\n    let minResults=(PageSelected-1)*(ResultsSelected)+1;\n    let maxResults = ResultsSelected*PageSelected;\n\n    if (ResultsSelected*PageSelected>TotalResults)\n        {maxResults=TotalResults}\n\n    return <p className=\"text-warning\">Displaying Results: {minResults} through {maxResults}</p>\n};\n\nexport default ShowResults;","import React, { useState, useEffect} from 'react';\nimport Cardlist from \"../molecules/cardlist\";\nimport movieAPI from \"../atoms/movieAPI\";\nimport PageTitle from \"../atoms/pageTitle\";\nimport ShowResults from \"../atoms/ShowResults\";\nimport PageLoading from \"../atoms/pageLoading\";\n\nconst Home = () => {\n    const [moviestoDisplay, setmoviestoDisplay] = useState(\"\");\n    const [userInput,setUserInput]=useState(localStorage.getItem(`searchString`));\n    const [PageSelected,setPageSelected]=useState(localStorage.getItem('PageSelected') || 1);\n    const [PageArray,setPageArray]=useState([1]);\n    const [ResultsSelected,setResultsSelected]=useState(localStorage.getItem('ResultsSelected') || 10);\n    const ResultsArray=[10,20,50];\n    const [TotalResults,setTotalResults]=useState();\n    const [FetchSuccess,setFetchSuccess]=useState(false);\n    const [isLoading,setisLoading]=useState(false);\n\n    async function getmovieData() {\n        setisLoading(true);\n        localStorage.setItem(`searchString`,userInput);\n        localStorage.setItem('PageSelected',PageSelected);\n        localStorage.setItem('ResultsSelected',ResultsSelected);\n        const rawData = await fetch(`https://www.omdbapi.com/?s=${userInput}&apikey=${movieAPI}`)\n            .then(response => response.json());\n        setTotalResults(rawData.totalResults);\n\n        var wasFetchSuccess = (rawData.Response === \"True\");\n        setFetchSuccess(wasFetchSuccess);\n\n        const TotalPages = Math.ceil(rawData.totalResults/ResultsSelected);\n        let TotalPagesArray = [];\n        for (var i=1;i<=TotalPages;i++) {TotalPagesArray.push(i)}\n        setPageArray(TotalPagesArray);\n\n        let PagestoFetch = [];\n        const TotalFetches = Math.ceil(rawData.totalResults/10);\n        for (var z=(PageSelected-1)*(ResultsSelected/10)+1;z<=PageSelected*ResultsSelected/10;z++) {\n            if (z<=TotalFetches) {PagestoFetch.push(z)}}\n\n        let TotalMoviestoDisplay = [];\n        for (var q=0;q<PagestoFetch.length;q++) {\n            const MovieGrouping = await fetch(`https://www.omdbapi.com/?s=${userInput}&page=${PagestoFetch[q]}&apikey=${movieAPI}`)\n                .then(response => response.json());\n            for (var d=0;d<MovieGrouping.Search.length;d++) {TotalMoviestoDisplay.push(MovieGrouping.Search[d])}}\n        setmoviestoDisplay(TotalMoviestoDisplay);\n        setisLoading(false);\n    }\n\n    //eslint-disable-next-line\n    useEffect (()=> {if (userInput!==null) {getmovieData()} window.scrollTo(0,0)},[PageSelected,ResultsSelected]);\n\n    if (isLoading) {return(<PageLoading/>)}\n\n    return (!moviestoDisplay || !FetchSuccess) ? (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Search Movies'}/>\n            <input type=\"text\" size=\"15\" className=\"h6\" onChange={event=>setUserInput(event.target.value)}\n                   onKeyPress={event=>{if (event.key === \"Enter\") {setPageSelected(1);getmovieData()}}}/>\n            <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\"\n                    onClick={()=>{setPageSelected(1);getmovieData()}}>Title Search</button>\n            <br/>\n            <h2 className=\"text-warning\">No Searches Matching: {localStorage.getItem(`searchString`)}</h2>\n        </div>\n    ) : (\n        <div className=\"container-fluid p-padding text-center\">\n            <div className=\"row\">\n                <div className=\"col-xl-3\"></div>\n                <div className=\"col-xl-3 col-md-6\">\n                    <PageTitle Title={'Search Movies'}/>\n                    <input type=\"text\" size=\"15\" className=\"h6\" onChange={event=>setUserInput(event.target.value)}\n                           onKeyPress={event=>{if (event.key === \"Enter\") {setPageSelected(1);getmovieData()}}}/>\n                    <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\"\n                                onClick={()=>{setPageSelected(1);getmovieData()}}>Title Search</button>\n                </div>\n                <div className=\"col-xl-3 col-md-6 text-md-left\">\n                    <p className=\"text-warning\">Total Search Results: {TotalResults}</p>\n                    <p className=\"text-warning\">Total Pages: {PageArray.length}</p>\n                    <label className=\"text-warning\">Results per Page:\n                        <select className=\"ml-1\" value={ResultsSelected}\n                                onChange={event => {setPageSelected(1);setResultsSelected(event.target.value)}}>\n                            {ResultsArray.map(item=>(<option key={item} value={item}>{item}</option>))}\n                        </select>\n                    </label>\n                    <br/>\n                    <label className=\"text-warning\"> Page:\n                        <select className=\"ml-1 my-2\" value={PageSelected} onChange={event => setPageSelected(event.target.value)}>\n                            {PageArray.map(item=>(<option key={item} value={item}>{item}</option>))}\n                        </select>\n                    </label>\n                    <p className=\"text-warning\">Searches Matching: \"{localStorage.getItem(`searchString`)}\"</p>\n                    <ShowResults PageSelected={PageSelected} ResultsSelected={ResultsSelected} TotalResults={TotalResults}/>\n                </div>\n                <div className=\"col-xl-3\"></div>\n            </div>\n            <Cardlist movies={moviestoDisplay}/>\n        </div>\n    )\n};\n\nexport default Home;","import React, {useState, useEffect} from 'react';\nimport movieAPI from \"../atoms/movieAPI\";\nimport PageTitle from \"../atoms/pageTitle\";\nimport AddRemoveButton from \"../molecules/AddRemoveButton\";\nimport \"./details.scss\";\nimport PageLoading from \"../atoms/pageLoading\";\n\nconst Details = () => {\n    const [movietoDisplay, setmovietoDisplay] = useState(null);\n    const [isLoading,setisLoading]=useState(false);\n\n    async function getmovieData() {\n        setisLoading(true);\n        const displaymovieID = localStorage.getItem('movieID');\n        const rawData = await fetch(`https://www.omdbapi.com/?i=${displaymovieID}&apikey=${movieAPI}`)\n            .then(response => response.json());\n        setmovietoDisplay(rawData);\n        setisLoading(false);\n    }\n\n    //eslint-disable-next-line\n    useEffect (()=> {getmovieData(); window.scrollTo(0,0)},[]);\n\n    if (isLoading) {return(<PageLoading/>)}\n\n    return (!movietoDisplay || !localStorage.getItem('movieID')) ? (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Movie Details'}/>\n            <h2 className=\"text-warning\">No Movie to Display</h2>\n        </div>\n    ) : (\n        <div className=\"container-fluid p-padding text-center \">\n            <PageTitle Title={'Movie Details'}/>\n            <img className=\"p-movieimage-height p-movieimage-width bg-dark\" alt='Error Loading' src={movietoDisplay.Poster}/><br/>\n            <AddRemoveButton id={movietoDisplay.imdbID}/>\n            <div className=\"row justify-content-center \">\n                <table className=\"table table-striped table-bordered text-white my-4 col-md-10 col-lg-6 bg-secondary\">\n                    <tbody>\n                    <tr className=\"h5 text-warning\">\n                        <td className=\"align-middle\">Title:</td>\n                        <td>{movietoDisplay.Title}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Type:</td>\n                        <td>{movietoDisplay.Type}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Released:</td>\n                        <td>{movietoDisplay.Released}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Runtime:</td>\n                        <td>{movietoDisplay.Runtime}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Rated:</td>\n                        <td>{movietoDisplay.Rated}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Genre:</td>\n                        <td>{movietoDisplay.Genre}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Director(s):</td>\n                        <td>{movietoDisplay.Director}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Writer(s):</td>\n                        <td>{movietoDisplay.Writer}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Actor(s):</td>\n                        <td>{movietoDisplay.Actors}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>imdb ID:</td>\n                        <td><a href={`https://www.imdb.com/title/${movietoDisplay.imdbID}/`} className=\"p-hyperLink-color\"\n                               rel=\"noopener noreferrer\" target=\"_blank\">{movietoDisplay.imdbID}</a></td>\n                    </tr >\n                    <tr className=\"h6\">\n                        <td>imdb Rating:</td>\n                        <td className=\"align-middle\">{movietoDisplay.imdbRating}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Plot:</td>\n                        <td>{movietoDisplay.Plot}</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n};\n\nexport default Details;","import React from 'react';\n\nconst Footer=()=> {\n    let currentDate = new Date();\n    let currentYear = currentDate.getFullYear();\n\n    return (\n        <div className=\"text-white text-center bg-dark py-1 fixed-bottom\">\n            <small>Copyright &copy; Movie Gallery Website {currentYear.toString()}</small>\n        </div>\n    )\n};\n\nexport default Footer;","const particleOptions = {\n    particles: {\n        number: {\n            value: 80,\n            density: {\n                enable: true,\n                value_area: 800\n            }}}};\n\nexport default particleOptions;","import React from 'react';\nimport {HashRouter as Router, Switch, Route} from \"react-router-dom\";\nimport MainNavBar from \"./organisms/MainNavBar\"\nimport Favorites from \"./pages/favorites\";\nimport Home from \"./pages/home\";\nimport Details from \"./pages/details\";\nimport Footer from \"./organisms/footer\";\nimport Particles from 'react-particles-js';\nimport particleOptions from \"./atoms/particleOptions\";\n\nconst App = () => {\n    return (\n            <Router>\n                <Particles className='p-particles' params={particleOptions}/>\n                <MainNavBar/>\n                <Switch>\n                    <Route path=\"/details\" component={Details}/>\n                    <Route path=\"/favorites\" component={Favorites}/>\n                    <Route path=\"/\" component={Home}/>\n                </Switch>\n                <Footer/>\n            </Router>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}