{"version":3,"sources":["images/imageBlank.jpg","organisms/MainNavBar.jsx","atoms/pageTitle.jsx","atoms/movieAPI.js","atoms/pageLoading.jsx","Redux/actions/FavoritesChange.js","Redux/reducers/combinedReducers.js","Redux/reducers/favorites.js","Redux/reducers/movie.js","Redux/reducers/page.js","Redux/reducers/results.js","Redux/reducers/search.js","Redux/store.js","molecules/AddRemoveButton.jsx","molecules/card.jsx","Redux/actions/MovieChange.js","molecules/cardlist.jsx","pages/favorites.jsx","atoms/ShowResults.jsx","Redux/actions/PageChange.js","pages/home.jsx","Redux/actions/SearchChange.js","Redux/actions/ResultsChange.js","pages/details.jsx","organisms/footer.jsx","atoms/particleOptions.js","App.jsx","index.jsx"],"names":["module","exports","MainNavBar","className","type","data-toggle","data-target","id","to","PageTitle","Title","defaultProps","movieAPI","PageLoading","FavoritesChange","movieArray","localStorage","setItem","JSON","stringify","payload","combineReducers","favorites","state","parse","getItem","action","movie","page","results","search","store","createStore","AddRemoveButton","useState","isLoading","setisLoading","FavMovieArray","getState","isFavMovie","i","length","imdbID","value","onClick","splice","dispatch","window","location","reload","onMovieRemove","a","async","fetch","then","response","json","rawData","MovietoAdd","Year","Type","Poster","push","addMovietoArray","Card","DisplayPoster","require","movieID","alt","src","href","rel","target","Cardlist","movies","map","user","key","Favorites","useEffect","scrollTo","ShowResults","Results","Page","Total","minResults","maxResults","PageChange","Home","moviestoDisplay","setmoviestoDisplay","PageArray","setPageArray","TotalResults","setTotalResults","FetchSuccess","setFetchSuccess","userInput","useRef","filteredMovies","setfilteredMovies","filterTerm","filterType","getmovieData","inputString","current","totalResults","wasFetchSuccess","Response","TotalPages","Math","ceil","TotalPagesArray","PagestoFetch","TotalFetches","z","TotalMoviestoDisplay","moviepromises","data","Search","singlemovie","Promise","all","uniqueMoviesArray","Array","from","Set","unique","find","onFilterChange","FilteredMovieArray2","filter","toLowerCase","includes","placeholder","onChange","event","onKeyPress","htmlFor","item","size","Details","movieIDtoDisplay","movietoDisplay","setmovietoDisplay","PosterImage","setPosterImage","Released","Runtime","Rated","Genre","Director","Writer","Actors","imdbRating","Plot","Footer","currentYear","Date","getFullYear","toString","particleOptions","particles","number","density","enable","value_area","App","params","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24b5f134.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/imageBlank.dcb16180.jpg\";","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport './MainNavBar.scss';\n\nconst MainNavBar = () => (\n  <nav className=\"navbar navbar-expand-md bg-dark fixed-top p-1\">\n    <h2 className=\"text-light\">Movie Gallery</h2>\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\">\n      <span className=\"text-white\"><i className=\"fas fa-bars\" /></span>\n    </button>\n\n    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"navbar-brand\">\n          <Link to=\"/\" className=\"nav-link px-3 py-1\">Search</Link>\n        </li>\n        <li className=\"navbar-brand\">\n          <Link to=\"/favorites\" className=\"nav-link px-3 py-1\">Favorites</Link>\n        </li>\n        <li className=\"navbar-brand\">\n          <Link to=\"/details\" className=\"nav-link px-3 py-1\">Details</Link>\n        </li>\n      </ul>\n    </div>\n  </nav>\n);\n\nexport default MainNavBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageTitle = ({ Title }) => <h1 className=\"text-white pb-3\"><u>{Title}</u></h1>;\n\nPageTitle.propTypes = {\n  Title: PropTypes.string,\n};\n\nPageTitle.defaultProps = {\n  Title: null,\n};\n\nexport default PageTitle;\n","const movieAPI = 'bf0372ee';\n\nexport default movieAPI;\n","import React from 'react';\n\nconst PageLoading = () => (\n  <p className=\"container-fluid p-padding text-center text-white\">\n    <i className=\"fas fa-5x fa-cog fa-spin\" />\n  </p>\n);\n\nexport default PageLoading;\n","export default function FavoritesChange(movieArray) {\n  localStorage.setItem('FavoriteArray', JSON.stringify(movieArray));\n  return { type: 'Favorites_Change', payload: movieArray };\n}\n","import { combineReducers } from 'redux';\nimport favorites from './favorites';\nimport movie from './movie';\nimport page from './page';\nimport results from './results';\nimport search from './search';\n\nexport default combineReducers({\n  favorites, movie, page, results, search,\n});\n","export default function favorites(state = JSON.parse(localStorage.getItem('FavoriteArray')) || [], action) {\n  if (action.type === 'Favorites_Change') {\n    return action.payload;\n  }\n  return state;\n}\n","export default function movie(state = localStorage.getItem('Movieselected') || null, action) {\n  if (action.type === 'Movie_Change') {\n    return action.payload;\n  }\n  return state;\n}\n","export default function page(state = localStorage.getItem('Pageselected') || 1, action) {\n  if (action.type === 'Page_Change') {\n    return action.payload;\n  }\n  return state;\n}\n","export default function results(state = localStorage.getItem('Resultsselected') || 10, action) {\n  if (action.type === 'Results_Change') {\n    return action.payload;\n  }\n  return state;\n}\n","export default function search(state = localStorage.getItem('Searchstring') || '', action) {\n  if (action.type === 'Search_Change') {\n    return action.payload;\n  }\n  return state;\n}\n","import { createStore } from 'redux';\nimport combineReducers from './reducers/combinedReducers';\n\nconst store = createStore(combineReducers);\n\nexport default store;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport movieAPI from '../atoms/movieAPI';\nimport PageLoading from '../atoms/pageLoading';\nimport FavoritesChange from '../Redux/actions/FavoritesChange';\nimport store from '../Redux/store';\n\nconst AddRemoveButton = ({ id }) => {\n  const [isLoading, setisLoading] = useState(false);\n  const FavMovieArray = store.getState().favorites;\n\n  let isFavMovie = false;\n  for (let i = 0; i < FavMovieArray.length; i += 1) {\n    if (id === FavMovieArray[i].imdbID) { isFavMovie = true; }\n  }\n\n  function onMovieAdd() {\n    setisLoading(true);\n    async function addMovietoArray() {\n      const rawData = await fetch(`https://www.omdbapi.com/?i=${id}&apikey=${movieAPI}`)\n        .then((response) => response.json());\n      const MovietoAdd = {\n        Title: rawData.Title,\n        Year: rawData.Year,\n        imdbID: rawData.imdbID,\n        Type: rawData.Type,\n        Poster: rawData.Poster,\n      };\n      FavMovieArray.push(MovietoAdd);\n      store.dispatch(FavoritesChange(FavMovieArray));\n      setisLoading(false);\n    }\n    addMovietoArray();\n  }\n\n  function onMovieRemove() {\n    for (let i = 0; i < FavMovieArray.length; i += 1) {\n      if (id === FavMovieArray[i].imdbID) { FavMovieArray.splice(i, 1); }\n    }\n    store.dispatch(FavoritesChange(FavMovieArray));\n    window.location.reload(true);\n  }\n\n  if (isLoading) { return (<PageLoading />); }\n\n  return (!isFavMovie) ? (\n    <button\n      type=\"submit\"\n      value=\"Submit\"\n      className=\"btn btn-success m-4\"\n      onClick={() => onMovieAdd()}\n    >\n                    Add to Favorites\n    </button>\n  ) : (\n    <button\n      type=\"submit\"\n      value=\"Submit\"\n      className=\"btn btn-danger m-4\"\n      onClick={() => onMovieRemove()}\n    >\n                    Remove From Favorites\n    </button>\n  );\n};\n\nAddRemoveButton.propTypes = {\n  id: PropTypes.string,\n};\n\nAddRemoveButton.defaultProps = {\n  id: null,\n};\n\nexport default AddRemoveButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './card.scss';\nimport { Link } from 'react-router-dom';\nimport MovieChange from '../Redux/actions/MovieChange';\nimport AddRemoveButton from './AddRemoveButton';\nimport store from '../Redux/store';\n\nconst Card = ({\n  Title, Year, imdbID, Type, Poster,\n}) => {\n  let DisplayPoster = `${Poster}`;\n  if (DisplayPoster === 'N/A') { DisplayPoster = require('../images/imageBlank.jpg'); }\n\n  return (\n    <div className=\"card d-inline-flex m-card-width m-card-hover m-1 bg-dark\">\n      <Link to=\"/details\" onClick={() => store.dispatch(MovieChange(`${imdbID}`))}>\n        <img className=\"m-cardimg-height w-100\" alt=\"Error Loading\" src={DisplayPoster} />\n        <div className=\"card-body\">\n          <h5 className=\"card-title text-warning\">{Title}</h5>\n          <p className=\"card-text text-light\">\nYear:\n            {Year}\n          </p>\n          <p className=\"card-text text-light\">\nType:\n            {Type}\n          </p>\n        </div>\n      </Link>\n      <a\n        href={`https://www.imdb.com/title/${imdbID}/`}\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        className=\"m-cardhyperLink-color\"\n      >\nImdb ID:\n        {' '}\n        {imdbID}\n      </a>\n      <AddRemoveButton id={imdbID} />\n    </div>\n  );\n};\n\nCard.propTypes = {\n  Title: PropTypes.string,\n  Year: PropTypes.string,\n  imdbID: PropTypes.string,\n  Type: PropTypes.string,\n  Poster: PropTypes.string,\n};\n\nCard.defaultProps = {\n  Title: null,\n  Year: null,\n  imdbID: null,\n  Type: null,\n  Poster: null,\n};\n\nexport default Card;\n","export default function MovieChange(movieID) {\n  localStorage.setItem('Movieselected', movieID);\n  return { type: 'Movie_Change', payload: movieID };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './card';\n\nconst Cardlist = ({ movies }) => (\n  <div>\n    {\n        movies.map((user, i) => (\n          <Card\n            key={movies[i].imdbID}\n            Title={movies[i].Title}\n            Year={movies[i].Year}\n            imdbID={movies[i].imdbID}\n            Type={movies[i].Type}\n            Poster={movies[i].Poster}\n          />\n        ))\n      }\n  </div>\n);\n\nCardlist.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    Title: PropTypes.string,\n    Year: PropTypes.string,\n    imdbID: PropTypes.string,\n    Type: PropTypes.string,\n    Poster: PropTypes.string,\n  })),\n};\n\nCardlist.defaultProps = {\n  movies: null,\n};\n\nexport default Cardlist;\n","import React, { useEffect } from 'react';\nimport PageTitle from '../atoms/pageTitle';\nimport Cardlist from '../molecules/cardlist';\nimport store from '../Redux/store';\n\nconst Favorites = () => {\n  // eslint-disable-next-line\n    useEffect (()=> {window.scrollTo(0,0)},[]);\n\n  return (store.getState().favorites.length === 0) ? (\n    <div className=\"container-fluid p-padding text-center\">\n      <PageTitle Title=\"Favorite Movies\" />\n      <h2 className=\"text-warning\">No Favorites Stored</h2>\n    </div>\n  ) : (\n    <div className=\"container-fluid p-padding text-center\">\n      <PageTitle Title=\"Favorite Movies\" />\n      <Cardlist movies={store.getState().favorites} />\n    </div>\n  );\n};\n\nexport default Favorites;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ShowResults = ({ Results, Page, Total }) => {\n  const minResults = (Page - 1) * (Results) + 1;\n  let maxResults = Results * Page;\n\n  if (Results * Page > Total) { maxResults = Total; }\n\n  return (\n    <p className=\"text-warning\">\nDisplaying Results:\n      {' '}\n      {minResults}\n      {' '}\nthrough\n      {' '}\n      {maxResults}\n    </p>\n  );\n};\n\nShowResults.propTypes = {\n  Results: PropTypes.number,\n  Page: PropTypes.number,\n  Total: PropTypes.number,\n};\n\nShowResults.defaultProps = {\n  Results: null,\n  Page: null,\n  Total: null,\n};\n\nexport default ShowResults;\n","export default function PageChange(Page) {\n  localStorage.setItem('Pageselected', Page);\n  return { type: 'Page_Change', payload: Page };\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport Cardlist from '../molecules/cardlist';\nimport movieAPI from '../atoms/movieAPI';\nimport PageTitle from '../atoms/pageTitle';\nimport ShowResults from '../atoms/ShowResults';\nimport PageLoading from '../atoms/pageLoading';\nimport PageChange from '../Redux/actions/PageChange';\nimport ResultsChange from '../Redux/actions/ResultsChange';\nimport SearchChange from '../Redux/actions/SearchChange';\nimport store from '../Redux/store';\n\nconst Home = () => {\n  const [moviestoDisplay, setmoviestoDisplay] = useState('');\n  const [PageArray, setPageArray] = useState([1]);\n  const ResultsArray = [10, 20, 50];\n  const [TotalResults, setTotalResults] = useState();\n  const [FetchSuccess, setFetchSuccess] = useState(false);\n  const [isLoading, setisLoading] = useState(false);\n  const userInput = useRef(store.getState().search);\n  const [filteredMovies, setfilteredMovies] = useState([]);\n  const filterTerm = useRef('');\n  const TypeFilterArray = ['movie', 'series', 'game'];\n  const filterType = useRef('');\n\n  async function getmovieData() {\n    setisLoading(true);\n    store.dispatch(SearchChange(userInput.current));\n    const rawData = await fetch(`https://www.omdbapi.com/?s=${userInput.current}&apikey=${movieAPI}`)\n      .then((response) => response.json());\n    setTotalResults(rawData.totalResults);\n\n    const wasFetchSuccess = (rawData.Response === 'True');\n    setFetchSuccess(wasFetchSuccess);\n\n    const TotalPages = Math.ceil(rawData.totalResults / store.getState().results);\n    const TotalPagesArray = [];\n    for (let i = 1; i <= TotalPages; i += 1) { TotalPagesArray.push(i); }\n    setPageArray(TotalPagesArray);\n\n    const PagestoFetch = [];\n    const TotalFetches = Math.ceil(rawData.totalResults / 10);\n    for (let z = (store.getState().page - 1) * (store.getState().results / 10) + 1;\n      z <= (store.getState().page * store.getState().results) / 10; z += 1) {\n      if (z <= TotalFetches) { PagestoFetch.push(z); }\n    }\n\n    const TotalMoviestoDisplay = [];\n    const moviepromises = PagestoFetch.map((value) => {\n      const moviebatch = fetch(`https://www.omdbapi.com/?s=${userInput.current}&page=${value}&apikey=${movieAPI}`)\n        .then((response) => response.json())\n        .then((data) => data.Search.map((singlemovie) => TotalMoviestoDisplay.push(singlemovie)));\n      return (moviebatch);\n    });\n    await Promise.all(moviepromises);\n\n    const uniqueMoviesArray = Array.from(\n      new Set(TotalMoviestoDisplay.map((unique) => unique.imdbID)),\n    )\n      .map((imdbID) => TotalMoviestoDisplay.find((movie) => movie.imdbID === imdbID));\n\n    filterTerm.current = '';\n    filterType.current = '';\n    setmoviestoDisplay(uniqueMoviesArray);\n    setfilteredMovies(uniqueMoviesArray);\n    setisLoading(false);\n  }\n\n  // eslint-disable-next-line\n    useEffect (()=> {if (store.getState().search!==null) {getmovieData()} window.scrollTo(0,0)},[]);\n\n  function onFilterChange() {\n    const FilteredMovieArray1 = moviestoDisplay.filter(\n      (movie) => movie.Title.toLowerCase().includes(filterTerm.current),\n    );\n    const FilteredMovieArray2 = FilteredMovieArray1.filter(\n      (movie) => movie.Type.includes(filterType.current),\n    );\n    setfilteredMovies(FilteredMovieArray2);\n  }\n\n  if (isLoading) { return (<PageLoading />); }\n\n  return (!moviestoDisplay || !FetchSuccess) ? (\n    <div className=\"container-fluid p-padding text-center\">\n      <PageTitle Title=\"Search Movies\" />\n      <input\n        type=\"text\"\n        size=\"15\"\n        className=\"h6\"\n        onChange={(event) => { userInput.current = event.target.value; }}\n        onKeyPress={(event) => { if (event.key === 'Enter') { store.dispatch(PageChange(1)); getmovieData(); } }}\n      />\n      <button\n        type=\"submit\"\n        value=\"Submit\"\n        className=\"btn btn-primary btn-sm\"\n        onClick={() => { store.dispatch(PageChange(1)); getmovieData(); }}\n      >\nTitle Search\n      </button>\n      <br />\n      <h2 className=\"text-warning\">\nNo Searches Matching:\n        {store.getState().search}\n      </h2>\n    </div>\n  ) : (\n    <div className=\"container-fluid p-padding text-center\">\n      <div className=\"row\">\n        <div className=\"col-xl-3\" />\n        <div className=\"col-xl-3 col-md-6\">\n          <PageTitle Title=\"Search Movies\" />\n          <input\n            type=\"text\"\n            placeholder=\"Enter a movie title\"\n            className=\"h6\"\n            onChange={(event) => { userInput.current = event.target.value; }}\n            onKeyPress={(event) => { if (event.key === 'Enter') { store.dispatch(PageChange(1)); getmovieData(); } }}\n          />\n          <button\n            type=\"submit\"\n            value=\"Submit\"\n            className=\"btn btn-primary btn-sm\"\n            onClick={() => { store.dispatch(PageChange(1)); getmovieData(); }}\n          >\nTitle Search\n          </button>\n          <h6 className=\"text-white mt-2\">Filter Title By:</h6>\n          <input\n            type=\"search\"\n            placeholder=\"Enter filter term\"\n            className=\"h6\"\n            onChange={(event) => {\n              filterTerm.current = event.target.value.toLowerCase();\n              onFilterChange();\n            }}\n          />\n          <br />\n          <label htmlFor=\"FilterType\" className=\"text-white h6\">\nFilter Type By:\n            <select\n              id=\"FilterType\"\n              className=\"my-2\"\n              value={filterType.current}\n              onChange={(event) => {\n                filterType.current = event.target.value;\n                onFilterChange();\n              }}\n            >\n              <option key=\"\" value=\"\">Show All</option>\n              {TypeFilterArray.map((item) => (<option key={item} value={item}>{item}</option>))}\n            </select>\n          </label>\n        </div>\n        <div className=\"col-xl-3 col-md-6 text-md-left\">\n          <p className=\"text-warning\">\nTotal Search Results:\n            {TotalResults}\n          </p>\n          <p className=\"text-warning\">\nTotal Pages:\n            {PageArray.length}\n          </p>\n          <label htmlFor=\"ResultsperPage\" className=\"text-warning\">\nResults per Page:\n            <select\n              id=\"ResultsperPage\"\n              className=\"ml-1\"\n              value={store.getState().results}\n              onChange={(event) => {\n                store.dispatch(PageChange(1));\n                store.dispatch(ResultsChange(event.target.value));\n                getmovieData();\n              }}\n            >\n              {ResultsArray.map((item) => (<option key={item} value={item}>{item}</option>))}\n            </select>\n          </label>\n          <br />\n          <label htmlFor=\"PageSelection\" className=\"text-warning\">\n            {' '}\nPage:\n            <select\n              id=\"PageSelection\"\n              className=\"ml-1 my-2\"\n              value={store.getState().page}\n              onChange={(event) => {\n                store.dispatch(PageChange(event.target.value));\n                getmovieData();\n              }}\n            >\n              {PageArray.map((item) => (<option key={item} value={item}>{item}</option>))}\n            </select>\n          </label>\n          <p className=\"text-warning\">\nSearches Matching: &quot;\n            {store.getState().search}\n              &quot;\n          </p>\n          <ShowResults\n            Page={+store.getState().page}\n            Results={+store.getState().results}\n            Total={+TotalResults}\n          />\n        </div>\n        <div className=\"col-xl-3\" />\n      </div>\n      <Cardlist movies={filteredMovies} />\n    </div>\n  );\n};\n\nexport default Home;\n","export default function SearchChange(inputString) {\n  localStorage.setItem('Searchstring', inputString);\n  return { type: 'Search_Change', payload: inputString };\n}\n","export default function ResultsChange(Results) {\n  localStorage.setItem('Resultsselected', Results);\n  return { type: 'Results_Change', payload: Results };\n}\n","import React, { useState, useEffect } from 'react';\nimport movieAPI from '../atoms/movieAPI';\nimport PageTitle from '../atoms/pageTitle';\nimport './details.scss';\nimport PageLoading from '../atoms/pageLoading';\nimport AddRemoveButton from '../molecules/AddRemoveButton';\nimport store from '../Redux/store';\n\nconst Details = () => {\n  const movieIDtoDisplay = store.getState().movie;\n  const [movietoDisplay, setmovietoDisplay] = useState(null);\n  const [isLoading, setisLoading] = useState(false);\n  const [PosterImage, setPosterImage] = useState(require('../images/imageBlank.jpg'));\n\n  async function getmovieData() {\n    setisLoading(true);\n    const rawData = await fetch(`https://www.omdbapi.com/?i=${movieIDtoDisplay}&apikey=${movieAPI}`)\n      .then((response) => response.json());\n    setmovietoDisplay(rawData);\n    if (rawData.Poster !== 'N/A') { setPosterImage(rawData.Poster); }\n    setisLoading(false);\n  }\n\n  // eslint-disable-next-line\n    useEffect (()=> {getmovieData(); window.scrollTo(0,0)},[]);\n\n  if (isLoading) { return (<PageLoading />); }\n\n  return (!movietoDisplay || !movieIDtoDisplay) ? (\n    <div className=\"container-fluid p-padding text-center\">\n      <PageTitle Title=\"Movie Details\" />\n      <h2 className=\"text-warning\">No Movie to Display</h2>\n    </div>\n  ) : (\n    <div className=\"container-fluid p-padding text-center \">\n      <PageTitle Title=\"Movie Details\" />\n      <img className=\"p-movieimage-height p-movieimage-width bg-dark\" alt=\"Error Loading\" src={PosterImage} />\n      <br />\n      <AddRemoveButton id={movietoDisplay.imdbID} />\n      <div className=\"row justify-content-center \">\n        <table className=\"table table-striped table-bordered text-white my-4 col-md-10 col-lg-6 bg-secondary\">\n          <tbody>\n            <tr className=\"h5 text-warning\">\n              <td className=\"align-middle\">Title:</td>\n              <td>{movietoDisplay.Title}</td>\n            </tr>\n            <tr className=\"h6\">\n              <td>Type:</td>\n              <td>{movietoDisplay.Type}</td>\n            </tr>\n            <tr className=\"h6\">\n              <td>Released:</td>\n              <td>{movietoDisplay.Released}</td>\n            </tr>\n            <tr className=\"h6\">\n              <td>Runtime:</td>\n              <td>{movietoDisplay.Runtime}</td>\n            </tr>\n            <tr className=\"h6\">\n              <td>Rated:</td>\n              <td>{movietoDisplay.Rated}</td>\n            </tr>\n            <tr className=\"h6\">\n              <td>Genre:</td>\n              <td>{movietoDisplay.Genre}</td>\n            </tr>\n            <tr className=\"h6\">\n              <td className=\"align-middle\">Director(s):</td>\n              <td>{movietoDisplay.Director}</td>\n            </tr>\n            <tr className=\"h6\">\n              <td className=\"align-middle\">Writer(s):</td>\n              <td>{movietoDisplay.Writer}</td>\n            </tr>\n            <tr className=\"h6\">\n              <td className=\"align-middle\">Actor(s):</td>\n              <td>{movietoDisplay.Actors}</td>\n            </tr>\n            <tr className=\"h6\">\n              <td>imdb ID:</td>\n              <td>\n                <a\n                  href={`https://www.imdb.com/title/${movietoDisplay.imdbID}/`}\n                  className=\"p-hyperLink-color\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  {movietoDisplay.imdbID}\n                </a>\n              </td>\n            </tr>\n            <tr className=\"h6\">\n              <td>imdb Rating:</td>\n              <td className=\"align-middle\">{movietoDisplay.imdbRating}</td>\n            </tr>\n            <tr className=\"h6\">\n              <td className=\"align-middle\">Plot:</td>\n              <td>{movietoDisplay.Plot}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Details;\n","import React from 'react';\nimport './footer.css';\n\nconst Footer = () => {\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n\n  return (\n    <div className=\"text-white text-center bg-dark py-2 o-footer-height o-footer-bottom\">\n      <small>\nCopyright &copy; Movie Gallery Website\n        {currentYear.toString()}\n      </small>\n    </div>\n  );\n};\n\nexport default Footer;\n","const particleOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n    },\n  },\n};\n\nexport default particleOptions;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport MainNavBar from './organisms/MainNavBar';\nimport Favorites from './pages/favorites';\nimport Home from './pages/home';\nimport Details from './pages/details';\nimport Footer from './organisms/footer';\nimport particleOptions from './atoms/particleOptions';\n\nconst App = () => (\n  <Router>\n    <Particles className=\"p-particles\" params={particleOptions} />\n    <MainNavBar />\n    <Switch>\n      <Route path=\"/details\" component={Details} />\n      <Route path=\"/favorites\" component={Favorites} />\n      <Route path=\"/\" component={Home} />\n    </Switch>\n    <Footer />\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}