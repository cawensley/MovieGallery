{"version":3,"sources":["images/imageBlank.jpg","organisms/MainNavBar.js","atoms/pageTitle.js","atoms/movieAPI.js","atoms/pageLoading.js","store/MovieContext.js","molecules/AddRemoveButton.js","molecules/card.js","molecules/cardlist.js","pages/favorites.js","atoms/ShowResults.js","pages/home.js","pages/details.js","organisms/footer.js","atoms/particleOptions.js","store/Reducer.js","App.js","index.js"],"names":["module","exports","MainNavBar","className","type","data-toggle","data-target","id","to","PageTitle","Title","movieAPI","PageLoading","MovieContext","createContext","AddRemoveButton","useContext","UserData","setUserData","useState","isLoading","setisLoading","FavMovieArray","Favorites","isFavMovie","i","length","imdbID","value","onClick","splice","payload","onMovieRemove","a","fetch","then","response","json","rawData","MovietoAdd","Year","Type","Poster","push","addMovietoArray","onMovieAdd","Card","DisplayPoster","require","alt","src","href","rel","target","Cardlist","movies","map","user","key","useEffect","window","scrollTo","ShowResults","Results","Page","Total","minResults","maxResults","Home","moviestoDisplay","setmoviestoDisplay","PageArray","setPageArray","TotalResults","setTotalResults","FetchSuccess","setFetchSuccess","filterTerm","useRef","filteredMovies","setfilteredMovies","SearchString","userInput","setUserInput","getmovieData","totalResults","wasFetchSuccess","Response","TotalPages","Math","ceil","ResultsSelected","TotalPagesArray","PagestoFetch","TotalFetches","z","PageSelected","TotalMoviestoDisplay","q","MovieGrouping","d","Search","current","placeholder","onChange","event","onKeyPress","toLowerCase","FilteredMovieArray","filter","movie","includes","onFilterChange","item","size","Details","movietoDisplay","setmovietoDisplay","PosterImage","setPosterImage","MovieSelected","console","log","Released","Runtime","Rated","Genre","Director","Writer","Actors","imdbRating","Plot","Footer","currentYear","Date","getFullYear","toString","particleOptions","particles","number","density","enable","value_area","initialState","localStorage","getItem","JSON","parse","MovieState","children","useReducer","action","setItem","Object","assign","stringify","Provider","App","params","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfe22273.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/imageBlank.dcb16180.jpg\";","import {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport \"./MainNavBar.scss\";\n\nconst MainNavBar=()=> {\n    return (\n        <nav className=\"navbar navbar-expand-md bg-dark fixed-top p-1\">\n            <h2 className=\"text-light\">Movie Gallery</h2>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\">\n                <span className=\"text-white\"><i className=\"fas fa-bars\"></i></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"navbar-brand\">\n                        <Link to=\"/\" className=\"nav-link px-3 py-1\">Search</Link>\n                    </li>\n                    <li className=\"navbar-brand\">\n                        <Link to=\"/favorites\" className=\"nav-link px-3 py-1\">Favorites</Link>\n                    </li>\n                    <li className=\"navbar-brand\">\n                        <Link to=\"/details\" className=\"nav-link px-3 py-1\">Details</Link>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    )\n};\n\nexport default MainNavBar;","import React from 'react';\n\nconst PageTitle = ({Title}) => {\n    return <h1 className=\"text-white pb-3\"><u>{Title}</u></h1>;\n};\n\nexport default PageTitle;","const movieAPI = \"bf0372ee\";\n\nexport default movieAPI;","import React from 'react';\n\nconst PageLoading = () => {\n    return (\n        <p className=\"container-fluid p-padding text-center text-white\">\n            <i className=\"fas fa-5x fa-cog fa-spin\"></i>\n        </p>)\n};\n\nexport default PageLoading;","import {createContext} from 'react';\n\nconst MovieContext= createContext();\n\nexport default MovieContext;","import React,{useState,useContext} from 'react';\nimport movieAPI from \"../atoms/movieAPI\";\nimport PageLoading from \"../atoms/pageLoading\";\nimport MovieContext from \"../store/MovieContext\";\n\nconst AddRemoveButton = ({ id }) => {\n    const {UserData,setUserData} = useContext(MovieContext);\n    const [isLoading,setisLoading]=useState(false);\n    let FavMovieArray = UserData.Favorites;\n\n    var isFavMovie = false;\n    for (var i=0;i<FavMovieArray.length;i++) {\n        if (id===FavMovieArray[i].imdbID) {isFavMovie=true;}\n    }\n\n    function onMovieAdd () {\n        setisLoading(true);\n        async function addMovietoArray () {\n            const rawData = await fetch(`https://www.omdbapi.com/?i=${id}&apikey=${movieAPI}`)\n                .then(response => response.json());\n            let MovietoAdd={\n                Title: rawData.Title,\n                Year: rawData.Year,\n                imdbID: rawData.imdbID,\n                Type: rawData.Type,\n                Poster: rawData.Poster\n            };\n            FavMovieArray.push(MovietoAdd);\n            setUserData({type: 'FavoritesChange',payload:FavMovieArray});\n            setisLoading(false);\n        }\n        addMovietoArray();\n    }\n\n    function onMovieRemove () {\n        for (var i=0;i<FavMovieArray.length;i++) {\n            if (id===FavMovieArray[i].imdbID) {FavMovieArray.splice(i,1)}}\n        setUserData({type: 'FavoritesChange',payload:FavMovieArray});\n    }\n\n    if (isLoading) {return(<PageLoading/>)}\n\n    return (!isFavMovie) ? (\n            <button type=\"submit\" value=\"Submit\" className=\"btn btn-success m-4\"\n                    onClick={()=>onMovieAdd()}>\n                    Add to Favorites\n            </button>\n        ) : (\n            <button type=\"submit\" value=\"Submit\" className=\"btn btn-danger m-4\"\n                    onClick={()=>onMovieRemove()}>\n                    Remove From Favorites\n            </button>\n    );\n};\n\nexport default AddRemoveButton;\n\n\n\n\n\n\n","import React,{useContext} from 'react';\nimport './card.scss';\nimport {Link} from \"react-router-dom\";\nimport AddRemoveButton from \"./AddRemoveButton\";\nimport MovieContext from \"../store/MovieContext\";\n\nconst Card = ({Title,Year,id,Type,Poster}) => {\n    const {setUserData} = useContext(MovieContext);\n    var DisplayPoster = `${Poster}`;\n    if(DisplayPoster===\"N/A\") {DisplayPoster=require(`../images/imageBlank.jpg`)}\n\n    return (\n        <div className=\"card d-inline-flex m-card-width m-card-hover m-1 bg-dark\">\n            <Link to=\"/details\" onClick={()=>setUserData({type:\"MovieChange\",payload: `${id}`})}>\n                <img className=\"m-cardimg-height w-100\" alt='Error Loading' src={DisplayPoster}/>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title text-warning\">{Title}</h5>\n                    <p className=\"card-text text-light\">Year: {Year}</p>\n                    <p className=\"card-text text-light\">Type: {Type}</p>\n                </div>\n            </Link>\n            <a href={`https://www.imdb.com/title/${id}/`} rel=\"noopener noreferrer\" target=\"_blank\"\n               className=\"m-cardhyperLink-color\">Imdb ID: {id}</a>\n            <AddRemoveButton id={id}/>\n        </div>\n    );\n};\n\nexport default Card;","import React from 'react';\nimport Card from './card';\n\nconst Cardlist = ({ movies }) => {\n    return (\n        <div>\n            {\n                movies.map((user, i) => {\n                    return (\n                        <Card\n                            key={i}\n                            Title={movies[i].Title}\n                            Year={movies[i].Year}\n                            id={movies[i].imdbID}\n                            Type={movies[i].Type}\n                            Poster={movies[i].Poster}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n};\n\nexport default Cardlist;","import React, {useEffect,useContext} from 'react';\nimport PageTitle from \"../atoms/pageTitle\";\nimport Cardlist from \"../molecules/cardlist\";\nimport MovieContext from \"../store/MovieContext\";\n\nconst Favorites = () => {\n    const {UserData} = useContext(MovieContext);\n\n    //eslint-disable-next-line\n    useEffect (()=> {window.scrollTo(0,0)},[]);\n\n    return (UserData.Favorites.length===0) ? (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Favorite Movies'}/>\n            <h2 className=\"text-warning\">No Favorites Stored</h2>\n        </div>\n    ) : (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Favorite Movies'}/>\n            <Cardlist movies={UserData.Favorites}/>\n        </div>\n    );\n};\n\nexport default Favorites;","import React from 'react';\n\nconst ShowResults = ({Results,Page,Total}) => {\n\n    let minResults=(Page-1)*(Results)+1;\n    let maxResults = Results*Page;\n\n    if (Results*Page>Total)\n        {maxResults=Total}\n\n    return <p className=\"text-warning\">Displaying Results: {minResults} through {maxResults}</p>\n};\n\nexport default ShowResults;","import React, { useState, useEffect,useRef,useContext} from 'react';\nimport Cardlist from \"../molecules/cardlist\";\nimport movieAPI from \"../atoms/movieAPI\";\nimport PageTitle from \"../atoms/pageTitle\";\nimport ShowResults from \"../atoms/ShowResults\";\nimport PageLoading from \"../atoms/pageLoading\";\nimport MovieContext from \"../store/MovieContext\";\n\nconst Home = () => {\n    const {UserData,setUserData} = useContext(MovieContext);\n    const [moviestoDisplay, setmoviestoDisplay] = useState(\"\");\n    const [PageArray,setPageArray]=useState([1]);\n    const ResultsArray=[10,20,50];\n    const [TotalResults,setTotalResults]=useState();\n    const [FetchSuccess,setFetchSuccess]=useState(false);\n    const [isLoading,setisLoading]=useState(false);\n    const filterTerm=useRef(\"\");\n    const [filteredMovies,setfilteredMovies]=useState([]);\n    const [userInput,setUserInput]=useState(UserData.SearchString);\n\n    async function getmovieData() {\n        setisLoading(true);\n        setUserData({type:\"SearchChange\",payload:userInput});\n        const rawData = await fetch(`https://www.omdbapi.com/?s=${userInput}&apikey=${movieAPI}`)\n            .then(response => response.json());\n        setTotalResults(rawData.totalResults);\n\n        var wasFetchSuccess = (rawData.Response === \"True\");\n        setFetchSuccess(wasFetchSuccess);\n\n        const TotalPages = Math.ceil(rawData.totalResults/UserData.ResultsSelected);\n        let TotalPagesArray = [];\n        for (var i=1;i<=TotalPages;i++) {TotalPagesArray.push(i)}\n        setPageArray(TotalPagesArray);\n\n        let PagestoFetch = [];\n        const TotalFetches = Math.ceil(rawData.totalResults/10);\n        for (var z=(UserData.PageSelected-1)*(UserData.ResultsSelected/10)+1;z<=UserData.PageSelected*UserData.ResultsSelected/10;z++) {\n            if (z<=TotalFetches) {PagestoFetch.push(z)}}\n\n        let TotalMoviestoDisplay = [];\n        for (var q=0;q<PagestoFetch.length;q++) {\n            const MovieGrouping = await fetch(`https://www.omdbapi.com/?s=${userInput}&page=${PagestoFetch[q]}&apikey=${movieAPI}`)\n                .then(response => response.json());\n            for (var d=0;d<MovieGrouping.Search.length;d++) {TotalMoviestoDisplay.push(MovieGrouping.Search[d])}}\n        setmoviestoDisplay(TotalMoviestoDisplay);\n        filterTerm.current = \"\";\n        setfilteredMovies(TotalMoviestoDisplay);\n        setisLoading(false);\n    }\n\n    //eslint-disable-next-line\n    useEffect (()=> {if (UserData.SearchString!==null) {getmovieData()} window.scrollTo(0,0)},[UserData.PageSelected,UserData.ResultsSelected]);\n\n    function onFilterChange (event) {\n        filterTerm.current = event.toLowerCase();\n        const FilteredMovieArray = moviestoDisplay.filter(movie=>{\n            return movie.Title.toLowerCase().includes(filterTerm.current);});\n        setfilteredMovies(FilteredMovieArray);\n    }\n\n    if (isLoading) {return(<PageLoading/>)}\n\n    return (!moviestoDisplay || !FetchSuccess) ? (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Search Movies'}/>\n            <input type=\"text\" size=\"15\" className=\"h6\" onChange={event=>setUserInput(event.target.value)}\n                   onKeyPress={event=>{if (event.key === \"Enter\") {setUserData({type:\"PageChange\",payload:1});getmovieData()}}}/>\n            <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\"\n                    onClick={()=>{setUserData({type:\"PageChange\",payload:1});getmovieData()}}>Title Search</button>\n            <br/>\n            <h2 className=\"text-warning\">No Searches Matching: {UserData.SearchString}</h2>\n        </div>\n    ) : (\n        <div className=\"container-fluid p-padding text-center\">\n            <div className=\"row\">\n                <div className=\"col-xl-3\"></div>\n                <div className=\"col-xl-3 col-md-6\">\n                    <PageTitle Title={'Search Movies'}/>\n                    <input type=\"text\" placeholder=\"Enter a movie title\" className=\"h6\" onChange={event=>setUserInput(event.target.value)}\n                           onKeyPress={event=>{if (event.key === \"Enter\") {setUserData({type:\"PageChange\",payload:1});getmovieData()}}}/>\n                    <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\"\n                            onClick={()=>{setUserData({type:\"PageChange\",payload:1});getmovieData()}}>Title Search</button>\n                    <h5 className=\"text-white mt-2\" >Filter Title By:</h5>\n                    <input type=\"search\" placeholder=\"Enter filter term\" className=\"h6\" onChange={event=>onFilterChange(event.target.value)}/>\n                </div>\n                <div className=\"col-xl-3 col-md-6 text-md-left\">\n                    <p className=\"text-warning\">Total Search Results: {TotalResults}</p>\n                    <p className=\"text-warning\">Total Pages: {PageArray.length}</p>\n                    <label className=\"text-warning\">Results per Page:\n                        <select className=\"ml-1\" value={UserData.ResultsSelected}\n                                onChange={event => {setUserData({type:\"PageChange\",payload:1});setUserData({type:\"ResultsChange\",payload:event.target.value})}}>\n                            {ResultsArray.map(item=>(<option key={item} value={item}>{item}</option>))}\n                        </select>\n                    </label>\n                    <br/>\n                    <label className=\"text-warning\"> Page:\n                        <select className=\"ml-1 my-2\" value={UserData.PageSelected}\n                                onChange={event =>setUserData({type:\"PageChange\",payload:event.target.value})}>\n                            {PageArray.map(item=>(<option key={item} value={item}>{item}</option>))}\n                        </select>\n                    </label>\n                    <p className=\"text-warning\">Searches Matching: \"{UserData.SearchString}\"</p>\n                    <ShowResults Page={UserData.PageSelected} Results={UserData.ResultsSelected} Total={TotalResults}/>\n                </div>\n                <div className=\"col-xl-3\"></div>\n            </div>\n            <Cardlist movies={filteredMovies}/>\n        </div>\n    )\n};\n\nexport default Home;","import React, {useState, useEffect,useContext} from 'react';\nimport movieAPI from \"../atoms/movieAPI\";\nimport PageTitle from \"../atoms/pageTitle\";\nimport AddRemoveButton from \"../molecules/AddRemoveButton\";\nimport \"./details.scss\";\nimport PageLoading from \"../atoms/pageLoading\";\nimport MovieContext from \"../store/MovieContext\";\n\nconst Details = () => {\n    const {UserData} = useContext(MovieContext);\n    const [movietoDisplay, setmovietoDisplay] = useState(null);\n    const [isLoading,setisLoading]=useState(false);\n    const [PosterImage,setPosterImage]=useState(require(`../images/imageBlank.jpg`));\n\n    async function getmovieData() {\n        setisLoading(true);\n        const rawData = await fetch(`https://www.omdbapi.com/?i=${UserData.MovieSelected}&apikey=${movieAPI}`)\n            .then(response => response.json());\n        setmovietoDisplay(rawData);\n        if(rawData.Poster!==\"N/A\") {setPosterImage(rawData.Poster)}\n        console.log(rawData);\n        setisLoading(false);\n    }\n\n    //eslint-disable-next-line\n    useEffect (()=> {getmovieData(); window.scrollTo(0,0)},[]);\n\n    if (isLoading) {return(<PageLoading/>)}\n\n    return (!movietoDisplay || !UserData.MovieSelected) ? (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Movie Details'}/>\n            <h2 className=\"text-warning\">No Movie to Display</h2>\n        </div>\n    ) : (\n        <div className=\"container-fluid p-padding text-center \">\n            <PageTitle Title={'Movie Details'}/>\n            <img className=\"p-movieimage-height p-movieimage-width bg-dark\" alt='Error Loading' src={PosterImage}/><br/>\n            <AddRemoveButton id={movietoDisplay.imdbID}/>\n            <div className=\"row justify-content-center \">\n                <table className=\"table table-striped table-bordered text-white my-4 col-md-10 col-lg-6 bg-secondary\">\n                    <tbody>\n                    <tr className=\"h5 text-warning\">\n                        <td className=\"align-middle\">Title:</td>\n                        <td>{movietoDisplay.Title}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Type:</td>\n                        <td>{movietoDisplay.Type}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Released:</td>\n                        <td>{movietoDisplay.Released}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Runtime:</td>\n                        <td>{movietoDisplay.Runtime}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Rated:</td>\n                        <td>{movietoDisplay.Rated}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Genre:</td>\n                        <td>{movietoDisplay.Genre}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Director(s):</td>\n                        <td>{movietoDisplay.Director}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Writer(s):</td>\n                        <td>{movietoDisplay.Writer}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Actor(s):</td>\n                        <td>{movietoDisplay.Actors}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>imdb ID:</td>\n                        <td><a href={`https://www.imdb.com/title/${movietoDisplay.imdbID}/`} className=\"p-hyperLink-color\"\n                               rel=\"noopener noreferrer\" target=\"_blank\">{movietoDisplay.imdbID}</a></td>\n                    </tr >\n                    <tr className=\"h6\">\n                        <td>imdb Rating:</td>\n                        <td className=\"align-middle\">{movietoDisplay.imdbRating}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Plot:</td>\n                        <td>{movietoDisplay.Plot}</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n};\n\nexport default Details;","import React from 'react';\n\nconst Footer=()=> {\n    let currentDate = new Date();\n    let currentYear = currentDate.getFullYear();\n\n    return (\n        <div className=\"text-white text-center bg-dark py-1 fixed-bottom\">\n            <small>Copyright &copy; Movie Gallery Website {currentYear.toString()}</small>\n        </div>\n    )\n};\n\nexport default Footer;","const particleOptions = {\n    particles: {\n        number: {\n            value: 80,\n            density: {\n                enable: true,\n                value_area: 800\n            }}}};\n\nexport default particleOptions;","import React,{useReducer} from 'react';\nimport MovieContext from \"./MovieContext\";\n\nconst initialState = {\n    SearchString: (localStorage.getItem(\"Searchstring\") || \"\"),\n    Favorites: (JSON.parse(localStorage.getItem(\"FavoriteArray\")) || []),\n    MovieSelected: (localStorage.getItem(\"Movieselected\") || null),\n    PageSelected: (localStorage.getItem(\"Pageselected\") || 1),\n    ResultsSelected: (localStorage.getItem(\"Resultsselected\") || 10)\n};\n\nconst MovieState = ({children}) => {\n    const [UserData,setUserData] = useReducer((UserData,action) => {\n        switch(action.type) {\n            case 'SearchChange':\n                localStorage.setItem(\"Searchstring\",action.payload);\n                return Object.assign({},UserData,{SearchString: action.payload});\n            case 'FavoritesChange':\n                localStorage.setItem(\"FavoriteArray\",JSON.stringify(action.payload));\n                return Object.assign({},UserData,{Favorites: action.payload});\n            case 'MovieChange':\n                localStorage.setItem(\"Movieselected\",action.payload);\n                return Object.assign({},UserData,{MovieSelected: action.payload});\n            case 'PageChange':\n                localStorage.setItem(\"Pageselected\",action.payload);\n                return Object.assign({},UserData,{PageSelected: action.payload});\n            case 'ResultsChange':\n                localStorage.setItem(\"Resultsselected\",action.payload);\n                return Object.assign({},UserData,{ResultsSelected: action.payload});\n            default:\n                return UserData;\n        }\n    },initialState);\n\n    return <MovieContext.Provider value={{UserData,setUserData}}>{children}</MovieContext.Provider>\n};\n\nexport default MovieState;","import React from 'react';\nimport {HashRouter as Router, Switch, Route} from \"react-router-dom\";\nimport MainNavBar from \"./organisms/MainNavBar\"\nimport Favorites from \"./pages/favorites\";\nimport Home from \"./pages/home\";\nimport Details from \"./pages/details\";\nimport Footer from \"./organisms/footer\";\nimport Particles from 'react-particles-js';\nimport particleOptions from \"./atoms/particleOptions\";\nimport MovieState from \"./store/Reducer\";\n\nconst App = () => {\n\n    return (\n        <MovieState>\n            <Router>\n                <Particles className='p-particles' params={particleOptions}/>\n                <MainNavBar/>\n                <Switch>\n                    <Route path=\"/details\" component={Details}/>\n                    <Route path=\"/favorites\" component={Favorites}/>\n                    <Route path=\"/\" component={Home}/>\n                </Switch>\n                <Footer/>\n            </Router>\n        </MovieState>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}