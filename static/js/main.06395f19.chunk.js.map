{"version":3,"sources":["organisms/MainNavBar.js","atoms/pageTitle.js","atoms/movieAPI.js","atoms/pageLoading.js","store/MovieContext.js","molecules/AddRemoveButton.js","molecules/card.js","molecules/cardlist.js","pages/favorites.js","atoms/ShowResults.js","pages/home.js","pages/details.js","organisms/footer.js","atoms/particleOptions.js","store/Reducer.js","App.js","index.js"],"names":["MainNavBar","className","type","data-toggle","data-target","id","to","PageTitle","Title","movieAPI","PageLoading","MovieContext","createContext","AddRemoveButton","useContext","UserData","setUserData","useState","isLoading","setisLoading","FavMovieArray","Favorites","isFavMovie","i","length","imdbID","value","onClick","splice","payload","onMovieRemove","a","fetch","then","response","json","rawData","MovietoAdd","Year","Type","Poster","push","addMovietoArray","onMovieAdd","Card","alt","src","href","rel","target","Cardlist","movies","map","user","key","useEffect","window","scrollTo","ShowResults","Results","Page","Total","minResults","maxResults","Home","moviestoDisplay","setmoviestoDisplay","PageArray","setPageArray","TotalResults","setTotalResults","FetchSuccess","setFetchSuccess","filterTerm","useRef","filteredMovies","setfilteredMovies","getmovieData","SearchString","totalResults","wasFetchSuccess","Response","TotalPages","Math","ceil","ResultsSelected","TotalPagesArray","PagestoFetch","TotalFetches","z","PageSelected","TotalMoviestoDisplay","q","MovieGrouping","d","Search","current","placeholder","onChange","event","onKeyPress","toLowerCase","FilteredMovieArray","filter","movie","includes","onFilterChange","item","size","Details","movietoDisplay","setmovietoDisplay","MovieSelected","Released","Runtime","Rated","Genre","Director","Writer","Actors","imdbRating","Plot","Footer","currentYear","Date","getFullYear","toString","particleOptions","particles","number","density","enable","value_area","initialState","MovieState","children","useReducer","state","action","Object","assign","Provider","App","params","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06395f19.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport \"./MainNavBar.scss\";\n\nconst MainNavBar=()=> {\n    return (\n        <nav className=\"navbar navbar-expand-md bg-dark fixed-top p-1\">\n            <h2 className=\"text-light\">Movie Gallery</h2>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\">\n                <span className=\"text-white\"><i className=\"fas fa-bars\"></i></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"navbar-brand\">\n                        <Link to=\"/\" className=\"nav-link px-3 py-1\">Search</Link>\n                    </li>\n                    <li className=\"navbar-brand\">\n                        <Link to=\"/favorites\" className=\"nav-link px-3 py-1\">Favorites</Link>\n                    </li>\n                    <li className=\"navbar-brand\">\n                        <Link to=\"/details\" className=\"nav-link px-3 py-1\">Details</Link>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    )\n};\n\nexport default MainNavBar;","import React from 'react';\n\nconst PageTitle = ({Title}) => {\n    return <h1 className=\"text-white pb-3\"><u>{Title}</u></h1>;\n};\n\nexport default PageTitle;","const movieAPI = \"bf0372ee\";\n\nexport default movieAPI;","import React from 'react';\n\nconst PageLoading = () => {\n    return (\n        <p className=\"container-fluid p-padding text-center text-white\">\n            <i className=\"fas fa-5x fa-cog fa-spin\"></i>\n        </p>)\n};\n\nexport default PageLoading;","import {createContext} from 'react';\n\nconst MovieContext= createContext();\n\nexport default MovieContext;","import React,{useState,useContext} from 'react';\nimport movieAPI from \"../atoms/movieAPI\";\nimport PageLoading from \"../atoms/pageLoading\";\nimport MovieContext from \"../store/MovieContext\";\n\nconst AddRemoveButton = ({ id }) => {\n    const {UserData,setUserData} = useContext(MovieContext);\n    const [isLoading,setisLoading]=useState(false);\n    let FavMovieArray = UserData.Favorites;\n\n    var isFavMovie = false;\n    for (var i=0;i<FavMovieArray.length;i++) {\n        if (id===FavMovieArray[i].imdbID) {isFavMovie=true;}\n    }\n\n    function onMovieAdd () {\n        setisLoading(true);\n        async function addMovietoArray () {\n            const rawData = await fetch(`https://www.omdbapi.com/?i=${id}&apikey=${movieAPI}`)\n                .then(response => response.json());\n            let MovietoAdd={\n                Title: rawData.Title,\n                Year: rawData.Year,\n                imdbID: rawData.imdbID,\n                Type: rawData.Type,\n                Poster: rawData.Poster\n            };\n            FavMovieArray.push(MovietoAdd);\n            setUserData({type: 'FavoritesChange',payload:FavMovieArray});\n            setisLoading(false);\n        }\n        addMovietoArray();\n    }\n\n    function onMovieRemove () {\n        for (var i=0;i<FavMovieArray.length;i++) {\n            if (id===FavMovieArray[i].imdbID) {FavMovieArray.splice(i,1)}}\n        setUserData({type: 'FavoritesChange',payload:FavMovieArray});\n    }\n\n    if (isLoading) {return(<PageLoading/>)}\n\n    return (!isFavMovie) ? (\n            <button type=\"submit\" value=\"Submit\" className=\"btn btn-success m-4\"\n                    onClick={()=>onMovieAdd()}>\n                    Add to Favorites\n            </button>\n        ) : (\n            <button type=\"submit\" value=\"Submit\" className=\"btn btn-danger m-4\"\n                    onClick={()=>onMovieRemove()}>\n                    Remove From Favorites\n            </button>\n    );\n};\n\nexport default AddRemoveButton;\n\n\n\n\n\n\n","import React,{useContext} from 'react';\nimport './card.scss';\nimport {Link} from \"react-router-dom\";\nimport AddRemoveButton from \"./AddRemoveButton\";\nimport MovieContext from \"../store/MovieContext\";\n\nconst Card = ({Title,Year,id,Type,Poster}) => {\n    const {setUserData} = useContext(MovieContext);\n\n    return (\n        <div className=\"card d-inline-flex m-card-width m-card-hover m-1 bg-dark\">\n            <Link to=\"/details\" onClick={()=>setUserData({type:\"MovieChange\",payload: `${id}`})}>\n                <img className=\"m-cardimg-height w-100\" alt='Error Loading' src={`${Poster}`}/>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title text-warning\">{Title}</h5>\n                    <p className=\"card-text text-light\">Year: {Year}</p>\n                    <p className=\"card-text text-light\">Type: {Type}</p>\n                </div>\n            </Link>\n            <a href={`https://www.imdb.com/title/${id}/`} rel=\"noopener noreferrer\" target=\"_blank\"\n               className=\"m-cardhyperLink-color\">Imdb ID: {id}</a>\n            <AddRemoveButton id={id}/>\n        </div>\n    );\n};\n\nexport default Card;","import React from 'react';\nimport Card from './card';\n\nconst Cardlist = ({ movies }) => {\n    return (\n        <div>\n            {\n                movies.map((user, i) => {\n                    return (\n                        <Card\n                            key={i}\n                            Title={movies[i].Title}\n                            Year={movies[i].Year}\n                            id={movies[i].imdbID}\n                            Type={movies[i].Type}\n                            Poster={movies[i].Poster}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n};\n\nexport default Cardlist;","import React, {useEffect,useContext} from 'react';\nimport PageTitle from \"../atoms/pageTitle\";\nimport Cardlist from \"../molecules/cardlist\";\nimport MovieContext from \"../store/MovieContext\";\n\nconst Favorites = () => {\n    const {UserData} = useContext(MovieContext);\n\n    //eslint-disable-next-line\n    useEffect (()=> {window.scrollTo(0,0)},[]);\n\n    return (UserData.Favorites.length===0) ? (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Favorite Movies'}/>\n            <h2 className=\"text-warning\">No Favorites Stored</h2>\n        </div>\n    ) : (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Favorite Movies'}/>\n            <Cardlist movies={UserData.Favorites}/>\n        </div>\n    );\n};\n\nexport default Favorites;","import React from 'react';\n\nconst ShowResults = ({Results,Page,Total}) => {\n\n    let minResults=(Page-1)*(Results)+1;\n    let maxResults = Results*Page;\n\n    if (Results*Page>Total)\n        {maxResults=Total}\n\n    return <p className=\"text-warning\">Displaying Results: {minResults} through {maxResults}</p>\n};\n\nexport default ShowResults;","import React, { useState, useEffect,useRef,useContext} from 'react';\nimport Cardlist from \"../molecules/cardlist\";\nimport movieAPI from \"../atoms/movieAPI\";\nimport PageTitle from \"../atoms/pageTitle\";\nimport ShowResults from \"../atoms/ShowResults\";\nimport PageLoading from \"../atoms/pageLoading\";\nimport MovieContext from \"../store/MovieContext\";\n\nconst Home = () => {\n    const {UserData,setUserData} = useContext(MovieContext);\n    const [moviestoDisplay, setmoviestoDisplay] = useState(\"\");\n    const [PageArray,setPageArray]=useState([1]);\n    const ResultsArray=[10,20,50];\n    const [TotalResults,setTotalResults]=useState();\n    const [FetchSuccess,setFetchSuccess]=useState(false);\n    const [isLoading,setisLoading]=useState(false);\n    const filterTerm=useRef(\"\");\n    const [filteredMovies,setfilteredMovies]=useState([]);\n\n    async function getmovieData() {\n        setisLoading(true);\n        const rawData = await fetch(`https://www.omdbapi.com/?s=${UserData.SearchString}&apikey=${movieAPI}`)\n            .then(response => response.json());\n        setTotalResults(rawData.totalResults);\n\n        var wasFetchSuccess = (rawData.Response === \"True\");\n        setFetchSuccess(wasFetchSuccess);\n\n        const TotalPages = Math.ceil(rawData.totalResults/UserData.ResultsSelected);\n        let TotalPagesArray = [];\n        for (var i=1;i<=TotalPages;i++) {TotalPagesArray.push(i)}\n        setPageArray(TotalPagesArray);\n\n        let PagestoFetch = [];\n        const TotalFetches = Math.ceil(rawData.totalResults/10);\n        for (var z=(UserData.PageSelected-1)*(UserData.ResultsSelected/10)+1;z<=UserData.PageSelected*UserData.ResultsSelected/10;z++) {\n            if (z<=TotalFetches) {PagestoFetch.push(z)}}\n\n        let TotalMoviestoDisplay = [];\n        for (var q=0;q<PagestoFetch.length;q++) {\n            const MovieGrouping = await fetch(`https://www.omdbapi.com/?s=${UserData.SearchString}&page=${PagestoFetch[q]}&apikey=${movieAPI}`)\n                .then(response => response.json());\n            for (var d=0;d<MovieGrouping.Search.length;d++) {TotalMoviestoDisplay.push(MovieGrouping.Search[d])}}\n        setmoviestoDisplay(TotalMoviestoDisplay);\n        filterTerm.current = \"\";\n        setfilteredMovies(TotalMoviestoDisplay);\n        setisLoading(false);\n    }\n\n    //eslint-disable-next-line\n    useEffect (()=> {if (UserData.SearchString!==null) {getmovieData()} window.scrollTo(0,0)},[UserData.PageSelected,UserData.ResultsSelected]);\n\n    function onFilterChange (event) {\n        filterTerm.current = event.toLowerCase();\n        const FilteredMovieArray = moviestoDisplay.filter(movie=>{\n            return movie.Title.toLowerCase().includes(filterTerm.current);});\n        setfilteredMovies(FilteredMovieArray);\n    }\n\n    if (isLoading) {return(<PageLoading/>)}\n\n    return (!moviestoDisplay || !FetchSuccess) ? (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Search Movies'}/>\n            <input type=\"text\" size=\"15\" className=\"h6\"\n                   onChange={event=>setUserData({type:\"SearchChange\",payload:event.target.value})}\n                   onKeyPress={event=>{if (event.key === \"Enter\") {setUserData({type:\"PageChange\",payload:1});getmovieData()}}}/>\n            <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\"\n                    onClick={()=>{setUserData({type:\"PageChange\",payload:1});getmovieData()}}>Title Search</button>\n            <br/>\n            <h2 className=\"text-warning\">No Searches Matching: {UserData.SearchString}</h2>\n        </div>\n    ) : (\n        <div className=\"container-fluid p-padding text-center\">\n            <div className=\"row\">\n                <div className=\"col-xl-3\"></div>\n                <div className=\"col-xl-3 col-md-6\">\n                    <PageTitle Title={'Search Movies'}/>\n                    <input type=\"text\" placeholder=\"Enter a movie title\" className=\"h6\"\n                           onChange={event=>setUserData({type:\"SearchChange\",payload:event.target.value})}\n                           onKeyPress={event=>{if (event.key === \"Enter\") {setUserData({type:\"PageChange\",payload:1});getmovieData()}}}/>\n                    <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\"\n                                onClick={()=>{setUserData({type:\"PageChange\",payload:1});getmovieData()}}>Title Search</button>\n                    <h5 className=\"text-white mt-2\" >Filter Title By:</h5>\n                    <input type=\"search\" placeholder=\"Enter filter term\" className=\"h6\" onChange={event=>onFilterChange(event.target.value)}/>\n                </div>\n                <div className=\"col-xl-3 col-md-6 text-md-left\">\n                    <p className=\"text-warning\">Total Search Results: {TotalResults}</p>\n                    <p className=\"text-warning\">Total Pages: {PageArray.length}</p>\n                    <label className=\"text-warning\">Results per Page:\n                        <select className=\"ml-1\" value={UserData.ResultsSelected}\n                                onChange={event => {setUserData({type:\"PageChange\",payload:1});setUserData({type:\"ResultsChange\",payload:event.target.value})}}>\n                            {ResultsArray.map(item=>(<option key={item} value={item}>{item}</option>))}\n                        </select>\n                    </label>\n                    <br/>\n                    <label className=\"text-warning\"> Page:\n                        <select className=\"ml-1 my-2\" value={UserData.PageSelected}\n                                onChange={event =>setUserData({type:\"PageChange\",payload:event.target.value})}>\n                            {PageArray.map(item=>(<option key={item} value={item}>{item}</option>))}\n                        </select>\n                    </label>\n                    <p className=\"text-warning\">Searches Matching: \"{UserData.SearchString}\"</p>\n                    <ShowResults Page={UserData.PageSelected} Results={UserData.ResultsSelected} Total={TotalResults}/>\n                </div>\n                <div className=\"col-xl-3\"></div>\n            </div>\n            <Cardlist movies={filteredMovies}/>\n        </div>\n    )\n};\n\nexport default Home;","import React, {useState, useEffect,useContext} from 'react';\nimport movieAPI from \"../atoms/movieAPI\";\nimport PageTitle from \"../atoms/pageTitle\";\nimport AddRemoveButton from \"../molecules/AddRemoveButton\";\nimport \"./details.scss\";\nimport PageLoading from \"../atoms/pageLoading\";\nimport MovieContext from \"../store/MovieContext\";\n\nconst Details = () => {\n    const {UserData} = useContext(MovieContext);\n    const [movietoDisplay, setmovietoDisplay] = useState(null);\n    const [isLoading,setisLoading]=useState(false);\n\n    async function getmovieData() {\n        setisLoading(true);\n        const rawData = await fetch(`https://www.omdbapi.com/?i=${UserData.MovieSelected}&apikey=${movieAPI}`)\n            .then(response => response.json());\n        setmovietoDisplay(rawData);\n        setisLoading(false);\n    }\n\n    //eslint-disable-next-line\n    useEffect (()=> {getmovieData(); window.scrollTo(0,0)},[]);\n\n    if (isLoading) {return(<PageLoading/>)}\n\n    return (!movietoDisplay || !UserData.MovieSelected) ? (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Movie Details'}/>\n            <h2 className=\"text-warning\">No Movie to Display</h2>\n        </div>\n    ) : (\n        <div className=\"container-fluid p-padding text-center \">\n            <PageTitle Title={'Movie Details'}/>\n            <img className=\"p-movieimage-height p-movieimage-width bg-dark\" alt='Error Loading' src={movietoDisplay.Poster}/><br/>\n            <AddRemoveButton id={movietoDisplay.imdbID}/>\n            <div className=\"row justify-content-center \">\n                <table className=\"table table-striped table-bordered text-white my-4 col-md-10 col-lg-6 bg-secondary\">\n                    <tbody>\n                    <tr className=\"h5 text-warning\">\n                        <td className=\"align-middle\">Title:</td>\n                        <td>{movietoDisplay.Title}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Type:</td>\n                        <td>{movietoDisplay.Type}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Released:</td>\n                        <td>{movietoDisplay.Released}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Runtime:</td>\n                        <td>{movietoDisplay.Runtime}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Rated:</td>\n                        <td>{movietoDisplay.Rated}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Genre:</td>\n                        <td>{movietoDisplay.Genre}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Director(s):</td>\n                        <td>{movietoDisplay.Director}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Writer(s):</td>\n                        <td>{movietoDisplay.Writer}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Actor(s):</td>\n                        <td>{movietoDisplay.Actors}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>imdb ID:</td>\n                        <td><a href={`https://www.imdb.com/title/${movietoDisplay.imdbID}/`} className=\"p-hyperLink-color\"\n                               rel=\"noopener noreferrer\" target=\"_blank\">{movietoDisplay.imdbID}</a></td>\n                    </tr >\n                    <tr className=\"h6\">\n                        <td>imdb Rating:</td>\n                        <td className=\"align-middle\">{movietoDisplay.imdbRating}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Plot:</td>\n                        <td>{movietoDisplay.Plot}</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n};\n\nexport default Details;","import React from 'react';\n\nconst Footer=()=> {\n    let currentDate = new Date();\n    let currentYear = currentDate.getFullYear();\n\n    return (\n        <div className=\"text-white text-center bg-dark py-1 fixed-bottom\">\n            <small>Copyright &copy; Movie Gallery Website {currentYear.toString()}</small>\n        </div>\n    )\n};\n\nexport default Footer;","const particleOptions = {\n    particles: {\n        number: {\n            value: 80,\n            density: {\n                enable: true,\n                value_area: 800\n            }}}};\n\nexport default particleOptions;","import React,{useReducer} from 'react';\nimport MovieContext from \"./MovieContext\";\n\nconst initialState = {\n    SearchString: \"\",\n    Favorites: [],\n    MovieSelected: null,\n    PageSelected: 1,\n    ResultsSelected: 10\n};\n\nconst MovieState = ({children}) => {\n    const [UserData,setUserData] = useReducer((state,action) => {\n        switch(action.type) {\n            case 'SearchChange':\n                return Object.assign({},state,{SearchString: action.payload});\n            case 'FavoritesChange':\n                return Object.assign({},state,{Favorites: action.payload});\n            case 'MovieChange':\n                return Object.assign({},state,{MovieSelected: action.payload});\n            case 'PageChange':\n                return Object.assign({},state,{PageSelected: action.payload});\n            case 'ResultsChange':\n                return Object.assign({},state,{ResultsSelected: action.payload});\n            default:\n                return state;\n        }\n    },initialState);\n\n    return <MovieContext.Provider value={{UserData,setUserData}}>{children}</MovieContext.Provider>\n};\n\nexport default MovieState;","import React from 'react';\nimport {HashRouter as Router, Switch, Route} from \"react-router-dom\";\nimport MainNavBar from \"./organisms/MainNavBar\"\nimport Favorites from \"./pages/favorites\";\nimport Home from \"./pages/home\";\nimport Details from \"./pages/details\";\nimport Footer from \"./organisms/footer\";\nimport Particles from 'react-particles-js';\nimport particleOptions from \"./atoms/particleOptions\";\nimport MovieState from \"./store/Reducer\";\n\nconst App = () => {\n\n    return (\n        <MovieState>\n            <Router>\n                <Particles className='p-particles' params={particleOptions}/>\n                <MainNavBar/>\n                <Switch>\n                    <Route path=\"/details\" component={Details}/>\n                    <Route path=\"/favorites\" component={Favorites}/>\n                    <Route path=\"/\" component={Home}/>\n                </Switch>\n                <Footer/>\n            </Router>\n        </MovieState>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}