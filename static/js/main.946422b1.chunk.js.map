{"version":3,"sources":["organisms/MainNavBar.js","atoms/movieAPI.js","molecules/cardforfavorites.js","atoms/pageTitle.js","pages/favorites.js","molecules/cardforsearches.js","molecules/cardlistforsearches.js","pages/home.js","pages/details.js","organisms/footer.js","atoms/particleOptions.js","App.js","index.js"],"names":["MainNavBar","className","to","movieAPI","Cardforfavorites","id","useState","movietoDisplay","setmovietoDisplay","a","fetch","then","response","json","rawData","useEffect","getmovieData","onClick","localStorage","setItem","alt","src","Poster","height","Title","Year","imdbID","Type","type","value","FavMovieArray","JSON","parse","getItem","i","length","splice","stringify","window","location","reload","onMovieRemove","PageTitle","Favorites","map","user","key","Cardforsearches","Cardlistforsearches","movies","Home","moviestoDisplay","setmoviestoDisplay","userInput","setUserInput","Response","size","onChange","event","target","onKeyPress","totalResults","Search","Details","displaymovieID","push","onButtonAdd","Released","Runtime","Rated","Plot","Footer","currentYear","Date","getFullYear","toString","particleOptions","particles","number","density","enable","value_area","App","params","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.946422b1.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nconst MainNavBar=()=> {\n    return (\n            <nav className=\"bg-dark navbar navbar-expand o-mainnavbar_padding fixed-top p-1\">\n                <h2 className=\"text-primary\">Movie Gallery</h2>\n                <div className=\"ml-auto\">\n                    <Link to=\"/\" className=\"navbar-brand px-3 py-1\">Search</Link>\n                    <Link to=\"/favorites\" className=\"navbar-brand px-3 py-1\">Favorites</Link>\n                    <Link to=\"/details\" className=\"navbar-brand px-3 py-1\">Details</Link>\n                </div>\n            </nav>\n    )\n};\n\nexport default MainNavBar;","const movieAPI = \"bf0372ee\";\n\nexport default movieAPI;","import React, {useState, useEffect} from 'react';\nimport './card.css';\nimport {Link} from \"react-router-dom\";\nimport movieAPI from \"../atoms/movieAPI\";\n\nconst Cardforfavorites = ({id}) => {\n    const [movietoDisplay, setmovietoDisplay] = useState(null);\n\n    async function getmovieData () {\n        const rawData = await fetch(`https://www.omdbapi.com/?i=${id}&apikey=${movieAPI}`)\n            .then(response => response.json());\n        setmovietoDisplay(rawData);\n    }\n\n    function onMovieRemove () {\n        var FavMovieArray = JSON.parse(localStorage.getItem(\"favoriteArray\"));\n        for (var i=0;i<FavMovieArray.length;i++) {\n            if (id===FavMovieArray[i]) {FavMovieArray.splice(i,1)}\n        }\n        localStorage.setItem(\"favoriteArray\",JSON.stringify(FavMovieArray));\n        window.location.reload(true)\n    }\n\n    //eslint-disable-next-line\n    useEffect (()=> {getmovieData()},[]);\n\n    return (!movietoDisplay) ? (\n        <div className=\"p-padding text-center\">\n            <h2 className=\"text-warning\">No Movie to Display</h2>\n        </div>\n    ) : (\n        <Link to=\"/details\" onClick={()=>localStorage.setItem(`movieID`,`${id}`)}\n              className='card a-card-width a-card-hover d-inline-flex m-2 text-center bg-dark text-white'>\n            <img className=\"card-img-top\" alt='Error Loading' src={movietoDisplay.Poster} height={400} />\n            <div>\n                <h2 className=\"text-warning\">Title: {movietoDisplay.Title}</h2>\n                <p>Year: {movietoDisplay.Year}</p>\n                <p>Imdb ID: {movietoDisplay.imdbID}</p>\n                <p>Type: {movietoDisplay.Type}</p>\n                <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary m-4\"\n                        onClick={()=>onMovieRemove()}>Remove From Favorites</button>\n            </div>\n        </Link>\n    );\n};\n\nexport default Cardforfavorites;","import React from 'react';\n\nconst PageTitle = ({Title}) => {\n    return <h1 className=\"text-white pb-3\">{Title}</h1>;\n};\n\nexport default PageTitle;","import React from 'react';\nimport Cardforfavorites from '../molecules/cardforfavorites';\nimport PageTitle from \"../atoms/pageTitle\";\n\nconst Favorites = () => {\n\n    if (localStorage.getItem(\"favoriteArray\")) {\n        var FavMovieArray = JSON.parse(localStorage.getItem(\"favoriteArray\"))}\n\n    return (!FavMovieArray) ? (\n        <div className=\"p-padding text-center\">\n            <PageTitle Title={'Your Favorite Movies!'}/>\n            <h2 className=\"text-warning\">No Favorites Stored</h2>\n        </div>\n    ) : (\n        <div className=\"container-fluid p-padding text-center text-light\">\n            <PageTitle Title={'Your Favorite Movies!'}/>\n\n            <div>{FavMovieArray.map((user, i) => {\n                return (\n                    <Cardforfavorites key={i} id={FavMovieArray[i]}/>\n                )})}\n            </div>\n        </div>\n    );\n}\n\nexport default Favorites;","import React from 'react';\nimport './card.css';\nimport {Link} from \"react-router-dom\";\n\nconst Cardforsearches = ({Title,Year,id,Type,Poster}) => {\n\n    return (\n        <Link to=\"/details\" onClick={()=>localStorage.setItem(`movieID`,`${id}`)}\n              className='card a-card-width a-card-hover d-inline-flex m-2 text-center bg-dark text-white'>\n            <img className=\"card-img-top\" alt='Error Loading' src={`${Poster}`} height={400} />\n            <div>\n                <h2>{Title}</h2>\n                <p>Year: {Year}</p>\n                <p>Imdb ID: {id}</p>\n                <p>Type: {Type}</p>\n            </div>\n        </Link>\n    );\n};\n\nexport default Cardforsearches;","import React from 'react';\nimport Cardforsearches from './cardforsearches';\n\nconst Cardlistforsearches = ({ movies }) => {\n    return (\n        <div>\n            {\n                movies.map((user, i) => {\n                    return (\n                        <Cardforsearches\n                            key={i}\n                            Title={movies[i].Title}\n                            Year={movies[i].Year}\n                            id={movies[i].imdbID}\n                            Type={movies[i].Type}\n                            Poster={movies[i].Poster}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n};\n\nexport default Cardlistforsearches;","import React, { useState, useEffect} from 'react';\nimport Cardlistforsearches from \"../molecules/cardlistforsearches\";\nimport movieAPI from \"../atoms/movieAPI\";\nimport PageTitle from \"../atoms/pageTitle\";\n\nconst Home = () => {\n    const [moviestoDisplay, setmoviestoDisplay] = useState();\n    const [userInput,setUserInput]=useState(localStorage.getItem(`searchString`));\n\n    async function getmovieData() {\n        localStorage.setItem(`searchString`,userInput);\n        const rawData = await fetch(`https://www.omdbapi.com/?s=${userInput}&apikey=${movieAPI}`)\n            .then(response => response.json());\n        setmoviestoDisplay(rawData);\n    }\n\n    //eslint-disable-next-line\n    useEffect (()=> {getmovieData()},[]);\n\n    return (!moviestoDisplay || moviestoDisplay.Response === \"False\") ? (\n        <div className=\"p-padding text-center\">\n            <PageTitle Title={'Search Movies'}/>\n            <input type=\"text\" size=\"15\" className=\"h6\" onChange={event=>setUserInput(event.target.value)}\n                   onKeyPress={event=>{if (event.key === \"Enter\") {getmovieData()}}}/>\n            <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\"\n                    onClick={()=>getmovieData()}>Title Search</button>\n            <br/>\n            <h2 className=\"text-warning\">No Searches Matching: {localStorage.getItem(`searchString`)}</h2>\n        </div>\n        ) : (\n        <div className=\"p-padding text-center\">\n            <PageTitle Title={'Search Movies'}/>\n            <input type=\"text\" size=\"15\" className=\"h6\" onChange={event=>setUserInput(event.target.value)}\n                   onKeyPress={event=>{if (event.key === \"Enter\") {getmovieData()}}}/>\n            <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\"\n                    onClick={()=>getmovieData()}>Title Search</button>\n            <br/>\n            <h2 className=\"text-warning\">Total Search Results: {moviestoDisplay.totalResults}</h2>\n            <h2 className=\"text-warning\">Total Searches Displayed: {moviestoDisplay.Search.length}</h2>\n            <h2 className=\"text-warning\">Searched Phrase: {localStorage.getItem(`searchString`)}</h2>\n            <br/>\n            <Cardlistforsearches movies={moviestoDisplay.Search}/>\n        </div>\n    )\n};\n\nexport default Home;","import React, {useState, useEffect} from 'react';\nimport movieAPI from \"../atoms/movieAPI\";\nimport PageTitle from \"../atoms/pageTitle\";\n\nconst Details = () => {\n    const [movietoDisplay, setmovietoDisplay] = useState(null);\n\n    async function getmovieData() {\n        const displaymovieID = localStorage.getItem('movieID');\n        const rawData = await fetch(`https://www.omdbapi.com/?i=${displaymovieID}&apikey=${movieAPI}`)\n            .then(response => response.json());\n        setmovietoDisplay(rawData);\n    }\n\n    //eslint-disable-next-line\n    useEffect (()=> {getmovieData()},[]);\n\n    function onButtonAdd () {\n        var FavMovieArray = [];\n        if (localStorage.getItem(\"favoriteArray\")) {\n            FavMovieArray = JSON.parse(localStorage.getItem(\"favoriteArray\"))}\n        FavMovieArray.push(localStorage.getItem(`movieID`));\n        localStorage.setItem(\"favoriteArray\",JSON.stringify(FavMovieArray));\n    };\n\n    return (!movietoDisplay || !localStorage.getItem('movieID')) ? (\n        <div className=\"p-padding text-center\">\n            <PageTitle Title={'Movie Details'}/>\n            <h2 className=\"text-warning\">No Movie to Display</h2>\n        </div>\n    ) : (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Movie Details'}/>\n            <img alt='Error Loading' src={movietoDisplay.Poster} height={400}/>\n            <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary m-4\"\n                    onClick={()=>onButtonAdd()}>\n                    Add to Favorites\n            </button>\n            <div className=\"row justify-content-center align-content-center\">\n                <table className=\"table table-striped table-bordered text-white my-4 col-md-10 col-lg-6\">\n                    <tbody>\n                    <tr className=\"h5 text-warning\">\n                        <td>Title:</td>\n                        <td>{movietoDisplay.Title}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Released:</td>\n                        <td>{movietoDisplay.Released}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Runtime:</td>\n                        <td>{movietoDisplay.Runtime}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Rated:</td>\n                        <td>{movietoDisplay.Rated}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Type:</td>\n                        <td>{movietoDisplay.Type}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>imdbID:</td>\n                        <td>{movietoDisplay.imdbID}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Plot:</td>\n                        <td>{movietoDisplay.Plot}</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n};\n\nexport default Details;","import React from 'react';\n\nconst Footer=()=> {\n    let currentDate = new Date();\n    let currentYear = currentDate.getFullYear();\n\n    return (\n        <div className=\"text-white text-center bg-dark py-1\">\n            <small>Copyright &copy; Movie Gallery Website {currentYear.toString()}</small>\n        </div>\n    )\n};\n\nexport default Footer;","const particleOptions = {\n    particles: {\n        number: {\n            value: 80,\n            density: {\n                enable: true,\n                value_area: 800\n            }}}};\n\nexport default particleOptions;","import React from 'react';\nimport {HashRouter as Router, Switch, Route} from \"react-router-dom\";\nimport MainNavBar from \"./organisms/MainNavBar\"\nimport Favorites from \"./pages/favorites\";\nimport Home from \"./pages/home\";\nimport Details from \"./pages/details\";\nimport Footer from \"./organisms/footer\";\nimport Particles from 'react-particles-js';\nimport particleOptions from \"./atoms/particleOptions\";\n\nconst App = () => {\n    return (\n            <Router>\n                <Particles className='particles' params={particleOptions}/>\n                <MainNavBar/>\n                <Switch>\n                    <Route path=\"/details\" component={Details}/>\n                    <Route path=\"/favorites\" component={Favorites}/>\n                    <Route path=\"/\" component={Home}/>\n                </Switch>\n                <Footer/>\n            </Router>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}