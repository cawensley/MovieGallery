{"version":3,"sources":["images/imageBlank.jpg","organisms/MainNavBar.js","atoms/pageTitle.js","atoms/movieAPI.js","atoms/pageLoading.js","Redux/actions/FavoritesChange.js","Redux/reducers/combinedReducers.js","Redux/reducers/favorites.js","Redux/reducers/movie.js","Redux/reducers/page.js","Redux/reducers/results.js","Redux/reducers/search.js","Redux/store.js","molecules/AddRemoveButton.js","molecules/card.js","Redux/actions/MovieChange.js","molecules/cardlist.js","pages/favorites.js","atoms/ShowResults.js","Redux/actions/PageChange.js","pages/home.js","Redux/actions/SearchChange.js","Redux/actions/ResultsChange.js","pages/details.js","organisms/footer.js","atoms/particleOptions.js","App.js","index.js"],"names":["module","exports","MainNavBar","className","type","data-toggle","data-target","id","to","PageTitle","Title","movieAPI","PageLoading","FavoritesChange","movieArray","localStorage","setItem","JSON","stringify","payload","combineReducers","favorites","state","parse","getItem","action","movie","page","results","search","store","createStore","AddRemoveButton","useState","isLoading","setisLoading","FavMovieArray","getState","isFavMovie","i","length","imdbID","value","onClick","splice","dispatch","window","location","reload","onMovieRemove","a","async","fetch","then","response","json","rawData","MovietoAdd","Year","Type","Poster","push","addMovietoArray","Card","DisplayPoster","require","movieID","alt","src","href","rel","target","Cardlist","movies","map","user","key","Favorites","useEffect","scrollTo","ShowResults","Results","Page","Total","minResults","maxResults","PageChange","Home","moviestoDisplay","setmoviestoDisplay","PageArray","setPageArray","TotalResults","setTotalResults","FetchSuccess","setFetchSuccess","userInput","setUserInput","filteredMovies","setfilteredMovies","filterTerm","useRef","filterType","getmovieData","inputString","totalResults","wasFetchSuccess","Response","TotalPages","Math","ceil","TotalPagesArray","PagestoFetch","TotalFetches","z","TotalMoviestoDisplay","q","MovieGrouping","d","Search","current","onFilterChange","FilteredMovieArray2","filter","toLowerCase","includes","placeholder","onChange","event","onKeyPress","item","size","Details","movieIDtoDisplay","movietoDisplay","setmovietoDisplay","PosterImage","setPosterImage","Released","Runtime","Rated","Genre","Director","Writer","Actors","imdbRating","Plot","Footer","currentYear","Date","getFullYear","toString","particleOptions","particles","number","density","enable","value_area","App","params","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14b02699.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/imageBlank.dcb16180.jpg\";","import {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport \"./MainNavBar.scss\";\n\nconst MainNavBar=()=> {\n    return (\n        <nav className=\"navbar navbar-expand-md bg-dark fixed-top p-1\">\n            <h2 className=\"text-light\">Movie Gallery</h2>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\">\n                <span className=\"text-white\"><i className=\"fas fa-bars\"></i></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"navbar-brand\">\n                        <Link to=\"/\" className=\"nav-link px-3 py-1\">Search</Link>\n                    </li>\n                    <li className=\"navbar-brand\">\n                        <Link to=\"/favorites\" className=\"nav-link px-3 py-1\">Favorites</Link>\n                    </li>\n                    <li className=\"navbar-brand\">\n                        <Link to=\"/details\" className=\"nav-link px-3 py-1\">Details</Link>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    )\n};\n\nexport default MainNavBar;","import React from 'react';\n\nconst PageTitle = ({Title}) => {\n    return <h1 className=\"text-white pb-3\"><u>{Title}</u></h1>;\n};\n\nexport default PageTitle;","const movieAPI = \"bf0372ee\";\n\nexport default movieAPI;","import React from 'react';\n\nconst PageLoading = () => {\n    return (\n        <p className=\"container-fluid p-padding text-center text-white\">\n            <i className=\"fas fa-5x fa-cog fa-spin\"></i>\n        </p>)\n};\n\nexport default PageLoading;","export default function FavoritesChange(movieArray) {\n    localStorage.setItem(\"FavoriteArray\",JSON.stringify(movieArray));\n    return {type: 'Favorites_Change',payload: movieArray};\n}","import {combineReducers} from \"redux\";\nimport favorites from \"./favorites\";\nimport movie from \"./movie\";\nimport page from \"./page\";\nimport results from \"./results\";\nimport search from \"./search\";\n\nexport default combineReducers({favorites,movie,page,results,search});","export default function favorites (state=JSON.parse(localStorage.getItem(\"FavoriteArray\")) || [],action) {\n    if(action.type === 'Favorites_Change') {\n        return action.payload;\n    } else {\n        return state;\n    }\n}","export default function movie (state=localStorage.getItem(\"Movieselected\") || null,action) {\n    if(action.type === 'Movie_Change') {\n        return action.payload;\n    } else {\n        return state;\n    }\n}","export default function page (state=localStorage.getItem(\"Pageselected\") || 1,action) {\n    if(action.type === 'Page_Change') {\n        return action.payload;\n    } else {\n        return state;\n    }\n}","export default function results (state=localStorage.getItem(\"Resultsselected\") || 10,action) {\n    if(action.type === 'Results_Change') {\n        return action.payload;\n    } else {\n        return state;\n    }\n}","export default function search (state=localStorage.getItem(\"Searchstring\") || \"\",action) {\n    if(action.type === 'Search_Change') {\n        return action.payload;\n    } else {\n        return state;\n    }\n}","import {createStore,} from \"redux\";\nimport combineReducers from \"./reducers/combinedReducers\";\n\nconst store = createStore(combineReducers);\n\nexport default store;","import React,{useState} from 'react';\nimport movieAPI from \"../atoms/movieAPI\";\nimport PageLoading from \"../atoms/pageLoading\";\nimport FavoritesChange from \"../Redux/actions/FavoritesChange\";\nimport store from \"../Redux/store\";\n\nconst AddRemoveButton = ({id}) => {\n    const [isLoading,setisLoading]=useState(false);\n    let FavMovieArray = store.getState().favorites;\n\n    var isFavMovie = false;\n    for (var i=0;i<FavMovieArray.length;i++) {\n        if (id===FavMovieArray[i].imdbID) {isFavMovie=true;}\n    }\n\n    function onMovieAdd () {\n        setisLoading(true);\n        async function addMovietoArray () {\n            const rawData = await fetch(`https://www.omdbapi.com/?i=${id}&apikey=${movieAPI}`)\n                .then(response => response.json());\n            let MovietoAdd={\n                Title: rawData.Title,\n                Year: rawData.Year,\n                imdbID: rawData.imdbID,\n                Type: rawData.Type,\n                Poster: rawData.Poster\n            };\n            FavMovieArray.push(MovietoAdd);\n            store.dispatch(FavoritesChange(FavMovieArray));\n            setisLoading(false);\n        }\n        addMovietoArray();\n    }\n\n    function onMovieRemove () {\n        for (var i=0;i<FavMovieArray.length;i++) {\n            if (id===FavMovieArray[i].imdbID) {FavMovieArray.splice(i,1)}}\n        store.dispatch(FavoritesChange(FavMovieArray));\n        window.location.reload(true);\n    }\n\n    if (isLoading) {return(<PageLoading/>)}\n\n    return (!isFavMovie) ? (\n            <button type=\"submit\" value=\"Submit\" className=\"btn btn-success m-4\"\n                    onClick={()=>onMovieAdd()}>\n                    Add to Favorites\n            </button>\n        ) : (\n            <button type=\"submit\" value=\"Submit\" className=\"btn btn-danger m-4\"\n                    onClick={()=>onMovieRemove()}>\n                    Remove From Favorites\n            </button>\n    );\n};\n\nexport default AddRemoveButton;","import React from 'react';\nimport './card.scss';\nimport {Link} from \"react-router-dom\";\nimport MovieChange from \"../Redux/actions/MovieChange\";\nimport AddRemoveButton from \"./AddRemoveButton\";\nimport store from \"../Redux/store\";\n\nconst Card = ({Title,Year,id,Type,Poster}) => {\n    var DisplayPoster = `${Poster}`;\n    if(DisplayPoster===\"N/A\") {DisplayPoster=require(`../images/imageBlank.jpg`)}\n\n    return (\n        <div className=\"card d-inline-flex m-card-width m-card-hover m-1 bg-dark\">\n            <Link to=\"/details\" onClick={()=>store.dispatch(MovieChange(`${id}`))}>\n                <img className=\"m-cardimg-height w-100\" alt='Error Loading' src={DisplayPoster}/>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title text-warning\">{Title}</h5>\n                    <p className=\"card-text text-light\">Year: {Year}</p>\n                    <p className=\"card-text text-light\">Type: {Type}</p>\n                </div>\n            </Link>\n            <a href={`https://www.imdb.com/title/${id}/`} rel=\"noopener noreferrer\" target=\"_blank\"\n               className=\"m-cardhyperLink-color\">Imdb ID: {id}</a>\n            <AddRemoveButton id={id}/>\n        </div>\n    );\n};\n\nexport default Card;","export default function MovieChange(movieID) {\n    localStorage.setItem(\"Movieselected\",movieID);\n    return {type: 'Movie_Change',payload: movieID};\n}","import React from 'react';\nimport Card from './card';\n\nconst Cardlist = ({movies}) => {\n    return (\n        <div>\n            {\n                movies.map((user, i) => {\n                    return (\n                        <Card\n                            key={i}\n                            Title={movies[i].Title}\n                            Year={movies[i].Year}\n                            id={movies[i].imdbID}\n                            Type={movies[i].Type}\n                            Poster={movies[i].Poster}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n};\n\nexport default Cardlist;","import React, {useEffect} from 'react';\nimport PageTitle from \"../atoms/pageTitle\";\nimport Cardlist from \"../molecules/cardlist\";\nimport store from \"../Redux/store\";\n\nconst Favorites = () => {\n\n    //eslint-disable-next-line\n    useEffect (()=> {window.scrollTo(0,0)},[]);\n\n    return (store.getState().favorites.length===0) ? (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Favorite Movies'}/>\n            <h2 className=\"text-warning\">No Favorites Stored</h2>\n        </div>\n    ) : (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Favorite Movies'}/>\n            <Cardlist movies={store.getState().favorites}/>\n        </div>\n    );\n};\n\nexport default Favorites;","import React from 'react';\n\nconst ShowResults = ({Results,Page,Total}) => {\n\n    let minResults=(Page-1)*(Results)+1;\n    let maxResults = Results*Page;\n\n    if (Results*Page>Total)\n        {maxResults=Total}\n\n    return <p className=\"text-warning\">Displaying Results: {minResults} through {maxResults}</p>\n};\n\nexport default ShowResults;","export default function PageChange(Page) {\n    localStorage.setItem(\"Pageselected\",Page);\n    return {type: 'Page_Change',payload: Page};\n}","import React, {useState,useEffect,useRef} from 'react';\nimport Cardlist from \"../molecules/cardlist\";\nimport movieAPI from \"../atoms/movieAPI\";\nimport PageTitle from \"../atoms/pageTitle\";\nimport ShowResults from \"../atoms/ShowResults\";\nimport PageLoading from \"../atoms/pageLoading\";\nimport PageChange from \"../Redux/actions/PageChange\";\nimport ResultsChange from \"../Redux/actions/ResultsChange\";\nimport SearchChange from \"../Redux/actions/SearchChange\";\nimport store from \"../Redux/store\";\n\nconst Home = () => {\n    const [moviestoDisplay, setmoviestoDisplay] = useState(\"\");\n    const [PageArray,setPageArray]=useState([1]);\n    const ResultsArray=[10,20,50];\n    const [TotalResults,setTotalResults]=useState();\n    const [FetchSuccess,setFetchSuccess]=useState(false);\n    const [isLoading,setisLoading]=useState(false);\n    const [userInput,setUserInput]=useState(store.getState().search);\n    const [filteredMovies,setfilteredMovies]=useState([]);\n    const filterTerm=useRef(\"\");\n    const TypeFilterArray=[\"movie\",\"series\",\"game\"];\n    const filterType=useRef(\"\");\n\n    async function getmovieData() {\n        setisLoading(true);\n        store.dispatch(SearchChange(userInput));\n        const rawData = await fetch(`https://www.omdbapi.com/?s=${userInput}&apikey=${movieAPI}`)\n            .then(response => response.json());\n        setTotalResults(rawData.totalResults);\n\n        var wasFetchSuccess = (rawData.Response === \"True\");\n        setFetchSuccess(wasFetchSuccess);\n\n        const TotalPages = Math.ceil(rawData.totalResults/store.getState().results);\n        let TotalPagesArray = [];\n        for (var i=1;i<=TotalPages;i++) {TotalPagesArray.push(i)}\n        setPageArray(TotalPagesArray);\n\n        let PagestoFetch = [];\n        const TotalFetches = Math.ceil(rawData.totalResults/10);\n        for (var z=(store.getState().page-1)*(store.getState().results/10)+1;z<=store.getState().page*store.getState().results/10;z++) {\n            if (z<=TotalFetches) {PagestoFetch.push(z)}}\n\n        let TotalMoviestoDisplay = [];\n        for (var q=0;q<PagestoFetch.length;q++) {\n            const MovieGrouping = await fetch(`https://www.omdbapi.com/?s=${userInput}&page=${PagestoFetch[q]}&apikey=${movieAPI}`)\n                .then(response => response.json());\n            for (var d=0;d<MovieGrouping.Search.length;d++) {TotalMoviestoDisplay.push(MovieGrouping.Search[d])}}\n        setmoviestoDisplay(TotalMoviestoDisplay);\n        filterTerm.current = \"\";\n        filterType.current = \"\";\n        setfilteredMovies(TotalMoviestoDisplay);\n        setisLoading(false);\n    }\n\n    //eslint-disable-next-line\n    useEffect (()=> {if (store.getState().search!==null) {getmovieData()} window.scrollTo(0,0)},[]);\n\n    function onFilterChange () {\n        const FilteredMovieArray1 = moviestoDisplay.filter(movie=>{\n            return movie.Title.toLowerCase().includes(filterTerm.current);});\n        const FilteredMovieArray2 = FilteredMovieArray1.filter(movie=>{\n            return movie.Type.includes(filterType.current)});\n        setfilteredMovies(FilteredMovieArray2);\n    }\n\n    if (isLoading) {return(<PageLoading/>)}\n\n    return (!moviestoDisplay || !FetchSuccess) ? (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Search Movies'}/>\n            <input type=\"text\" size=\"15\" className=\"h6\" onChange={event=>setUserInput(event.target.value)}\n                   onKeyPress={event=>{if (event.key === \"Enter\") {store.dispatch(PageChange(1));getmovieData()}}}/>\n            <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\"\n                    onClick={()=>{store.dispatch(PageChange(1));getmovieData()}}>Title Search</button>\n            <br/>\n            <h2 className=\"text-warning\">No Searches Matching: {store.getState().search}</h2>\n        </div>\n    ) : (\n        <div className=\"container-fluid p-padding text-center\">\n            <div className=\"row\">\n                <div className=\"col-xl-3\"></div>\n                <div className=\"col-xl-3 col-md-6\">\n                    <PageTitle Title={'Search Movies'}/>\n                    <input type=\"text\" placeholder=\"Enter a movie title\" className=\"h6\" onChange={event=>setUserInput(event.target.value)}\n                           onKeyPress={event=>{if (event.key === \"Enter\") {store.dispatch(PageChange(1));getmovieData()}}}/>\n                    <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\"\n                            onClick={()=>{store.dispatch(PageChange(1));getmovieData()}}>Title Search</button>\n                    <h6 className=\"text-white mt-2\" >Filter Title By:</h6>\n                    <input type=\"search\" placeholder=\"Enter filter term\" className=\"h6\"\n                           onChange={event=>{filterTerm.current = event.target.value.toLowerCase();onFilterChange()}}/>\n                    <br/>\n                    <label className=\"text-white h6\">Filter Type By:\n                        <select className=\"my-2\" value={filterType.current}\n                                onChange={event => {filterType.current=event.target.value;onFilterChange()}}>\n                            <option key={\"\"} value={\"\"}>Show All</option>\n                            {TypeFilterArray.map(item=>(<option key={item} value={item}>{item}</option>))}\n                        </select>\n                    </label>\n                </div>\n                <div className=\"col-xl-3 col-md-6 text-md-left\">\n                    <p className=\"text-warning\">Total Search Results: {TotalResults}</p>\n                    <p className=\"text-warning\">Total Pages: {PageArray.length}</p>\n                    <label className=\"text-warning\">Results per Page:\n                        <select className=\"ml-1\" value={store.getState().results}\n                                onChange={event => {store.dispatch(PageChange(1));store.dispatch(ResultsChange(event.target.value));getmovieData()}}>\n                            {ResultsArray.map(item=>(<option key={item} value={item}>{item}</option>))}\n                        </select>\n                    </label>\n                    <br/>\n                    <label className=\"text-warning\"> Page:\n                        <select className=\"ml-1 my-2\" value={store.getState().page}\n                                onChange={event =>{store.dispatch(PageChange(event.target.value));getmovieData()}}>\n                            {PageArray.map(item=>(<option key={item} value={item}>{item}</option>))}\n                        </select>\n                    </label>\n                    <p className=\"text-warning\">Searches Matching: \"{store.getState().search}\"</p>\n                    <ShowResults Page={store.getState().page} Results={store.getState().results} Total={TotalResults}/>\n                </div>\n                <div className=\"col-xl-3\"></div>\n            </div>\n            <Cardlist movies={filteredMovies}/>\n        </div>\n    )\n};\n\nexport default Home;","export default function SearchChange(inputString) {\n    localStorage.setItem(\"Searchstring\",inputString);\n    return {type: 'Search_Change',payload: inputString};\n}","export default function ResultsChange(Results) {\n    localStorage.setItem(\"Resultsselected\",Results);\n    return {type: 'Results_Change',payload: Results};\n}","import React, {useState, useEffect} from 'react';\nimport movieAPI from \"../atoms/movieAPI\";\nimport PageTitle from \"../atoms/pageTitle\";\nimport \"./details.scss\";\nimport PageLoading from \"../atoms/pageLoading\";\nimport AddRemoveButton from \"../molecules/AddRemoveButton\";\nimport store from \"../Redux/store\";\n\nconst Details = () => {\n    const movieIDtoDisplay=store.getState().movie;\n    const [movietoDisplay, setmovietoDisplay] = useState(null);\n    const [isLoading,setisLoading]=useState(false);\n    const [PosterImage,setPosterImage]=useState(require(`../images/imageBlank.jpg`));\n\n    async function getmovieData() {\n        setisLoading(true);\n        const rawData = await fetch(`https://www.omdbapi.com/?i=${movieIDtoDisplay}&apikey=${movieAPI}`)\n            .then(response => response.json());\n        setmovietoDisplay(rawData);\n        if(rawData.Poster!==\"N/A\") {setPosterImage(rawData.Poster)}\n        setisLoading(false);\n    }\n\n    //eslint-disable-next-line\n    useEffect (()=> {getmovieData(); window.scrollTo(0,0)},[]);\n\n    if (isLoading) {return(<PageLoading/>)}\n\n    return (!movietoDisplay || !movieIDtoDisplay) ? (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Movie Details'}/>\n            <h2 className=\"text-warning\">No Movie to Display</h2>\n        </div>\n    ) : (\n        <div className=\"container-fluid p-padding text-center \">\n            <PageTitle Title={'Movie Details'}/>\n            <img className=\"p-movieimage-height p-movieimage-width bg-dark\" alt='Error Loading' src={PosterImage}/><br/>\n            <AddRemoveButton id={movietoDisplay.imdbID}/>\n            <div className=\"row justify-content-center \">\n                <table className=\"table table-striped table-bordered text-white my-4 col-md-10 col-lg-6 bg-secondary\">\n                    <tbody>\n                    <tr className=\"h5 text-warning\">\n                        <td className=\"align-middle\">Title:</td>\n                        <td>{movietoDisplay.Title}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Type:</td>\n                        <td>{movietoDisplay.Type}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Released:</td>\n                        <td>{movietoDisplay.Released}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Runtime:</td>\n                        <td>{movietoDisplay.Runtime}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Rated:</td>\n                        <td>{movietoDisplay.Rated}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Genre:</td>\n                        <td>{movietoDisplay.Genre}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Director(s):</td>\n                        <td>{movietoDisplay.Director}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Writer(s):</td>\n                        <td>{movietoDisplay.Writer}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Actor(s):</td>\n                        <td>{movietoDisplay.Actors}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>imdb ID:</td>\n                        <td><a href={`https://www.imdb.com/title/${movietoDisplay.imdbID}/`} className=\"p-hyperLink-color\"\n                               rel=\"noopener noreferrer\" target=\"_blank\">{movietoDisplay.imdbID}</a></td>\n                    </tr >\n                    <tr className=\"h6\">\n                        <td>imdb Rating:</td>\n                        <td className=\"align-middle\">{movietoDisplay.imdbRating}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Plot:</td>\n                        <td>{movietoDisplay.Plot}</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n};\n\nexport default Details;","import React from 'react';\nimport './footer.css';\n\nconst Footer=()=> {\n    let currentDate = new Date();\n    let currentYear = currentDate.getFullYear();\n\n    return (\n        <div className=\"text-white text-center bg-dark py-2 o-footer-height o-footer-bottom\">\n            <small>Copyright &copy; Movie Gallery Website {currentYear.toString()}</small>\n        </div>\n    )\n};\n\nexport default Footer;","const particleOptions = {\n    particles: {\n        number: {\n            value: 80,\n            density: {\n                enable: true,\n                value_area: 800\n            }}}};\n\nexport default particleOptions;","import React from 'react';\nimport {HashRouter as Router, Switch, Route} from \"react-router-dom\";\nimport MainNavBar from \"./organisms/MainNavBar\"\nimport Favorites from \"./pages/favorites\";\nimport Home from \"./pages/home\";\nimport Details from \"./pages/details\";\nimport Footer from \"./organisms/footer\";\nimport Particles from 'react-particles-js';\nimport particleOptions from \"./atoms/particleOptions\";\n\nconst App = () => {\n\n    return (\n            <Router>\n                <Particles className='p-particles' params={particleOptions}/>\n                <MainNavBar/>\n                <Switch>\n                    <Route path=\"/details\" component={Details}/>\n                    <Route path=\"/favorites\" component={Favorites}/>\n                    <Route path=\"/\" component={Home}/>\n                </Switch>\n                <Footer/>\n            </Router>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}