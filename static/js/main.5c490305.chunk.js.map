{"version":3,"sources":["organisms/MainNavBar.js","atoms/pageTitle.js","atoms/movieAPI.js","atoms/pageLoading.js","store/store.js","molecules/AddRemoveButton.js","molecules/card.js","molecules/cardlist.js","pages/favorites.js","atoms/ShowResults.js","pages/home.js","pages/details.js","organisms/footer.js","atoms/particleOptions.js","App.js","index.js"],"names":["MainNavBar","className","type","data-toggle","data-target","id","to","PageTitle","Title","movieAPI","PageLoading","MovieContext","createContext","AddRemoveButton","useContext","UserData","setUserData","useState","isLoading","setisLoading","FavMovieArray","Favorites","isFavMovie","i","length","imdbID","value","onClick","splice","Object","assign","onMovieRemove","a","fetch","then","response","json","rawData","MovietoAdd","Year","Type","Poster","push","addMovietoArray","onMovieAdd","Card","MovieSelected","alt","src","href","rel","target","Cardlist","movies","map","user","key","useEffect","window","scrollTo","ShowResults","Results","Page","Total","minResults","maxResults","Home","moviestoDisplay","setmoviestoDisplay","PageArray","setPageArray","TotalResults","setTotalResults","FetchSuccess","setFetchSuccess","filterTerm","useRef","filteredMovies","setfilteredMovies","getmovieData","SearchString","totalResults","wasFetchSuccess","Response","TotalPages","Math","ceil","ResultsSelected","TotalPagesArray","PagestoFetch","TotalFetches","z","PageSelected","TotalMoviestoDisplay","q","MovieGrouping","d","Search","current","placeholder","onChange","event","onKeyPress","toLowerCase","FilteredMovieArray","filter","movie","includes","onFilterChange","item","size","Details","movietoDisplay","setmovietoDisplay","Released","Runtime","Rated","Genre","Director","Writer","Actors","imdbRating","Plot","Footer","currentYear","Date","getFullYear","toString","particleOptions","particles","number","density","enable","value_area","App","Provider","params","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c490305.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport \"./MainNavBar.scss\";\n\nconst MainNavBar=()=> {\n    return (\n        <nav className=\"navbar navbar-expand-md bg-dark fixed-top p-1\">\n            <h2 className=\"text-light\">Movie Gallery</h2>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\">\n                <span className=\"text-white\"><i className=\"fas fa-bars\"></i></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"navbar-brand\">\n                        <Link to=\"/\" className=\"nav-link px-3 py-1\">Search</Link>\n                    </li>\n                    <li className=\"navbar-brand\">\n                        <Link to=\"/favorites\" className=\"nav-link px-3 py-1\">Favorites</Link>\n                    </li>\n                    <li className=\"navbar-brand\">\n                        <Link to=\"/details\" className=\"nav-link px-3 py-1\">Details</Link>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    )\n};\n\nexport default MainNavBar;","import React from 'react';\n\nconst PageTitle = ({Title}) => {\n    return <h1 className=\"text-white pb-3\"><u>{Title}</u></h1>;\n};\n\nexport default PageTitle;","const movieAPI = \"bf0372ee\";\n\nexport default movieAPI;","import React from 'react';\n\nconst PageLoading = () => {\n    return (\n        <p className=\"container-fluid p-padding text-center text-white\">\n            <i className=\"fas fa-5x fa-cog fa-spin\"></i>\n        </p>)\n};\n\nexport default PageLoading;","import {createContext} from 'react';\n\nconst MovieContext= createContext([\"green\",()=>{}]);\n\nexport default MovieContext;","import React,{useState,useContext} from 'react';\nimport movieAPI from \"../atoms/movieAPI\";\nimport PageLoading from \"../atoms/pageLoading\";\nimport MovieContext from \"../store/store\";\n\nconst AddRemoveButton = ({ id }) => {\n    const [UserData,setUserData] = useContext(MovieContext);\n    const [isLoading,setisLoading]=useState(false);\n    let FavMovieArray = UserData.Favorites;\n\n    var isFavMovie = false;\n    for (var i=0;i<FavMovieArray.length;i++) {\n        if (id===FavMovieArray[i].imdbID) {isFavMovie=true;}\n    }\n\n    function onMovieAdd () {\n        setisLoading(true);\n        async function addMovietoArray () {\n            const rawData = await fetch(`https://www.omdbapi.com/?i=${id}&apikey=${movieAPI}`)\n                .then(response => response.json());\n            let MovietoAdd={\n                Title: rawData.Title,\n                Year: rawData.Year,\n                imdbID: rawData.imdbID,\n                Type: rawData.Type,\n                Poster: rawData.Poster\n            };\n            FavMovieArray.push(MovietoAdd);\n            setUserData(Object.assign({},UserData,{Favorites: FavMovieArray}));\n            setisLoading(false);\n        }\n        addMovietoArray();\n    }\n\n    function onMovieRemove () {\n        for (var i=0;i<FavMovieArray.length;i++) {\n            if (id===FavMovieArray[i].imdbID) {FavMovieArray.splice(i,1)}}\n        setUserData(Object.assign({},UserData,{Favorites: FavMovieArray}));\n    }\n\n    if (isLoading) {return(<PageLoading/>)}\n\n    return (!isFavMovie) ? (\n            <button type=\"submit\" value=\"Submit\" className=\"btn btn-success m-4\"\n                    onClick={()=>onMovieAdd()}>\n                    Add to Favorites\n            </button>\n        ) : (\n            <button type=\"submit\" value=\"Submit\" className=\"btn btn-danger m-4\"\n                    onClick={()=>onMovieRemove()}>\n                    Remove From Favorites\n            </button>\n    );\n};\n\nexport default AddRemoveButton;\n\n\n\n\n\n\n","import React,{useContext} from 'react';\nimport './card.scss';\nimport {Link} from \"react-router-dom\";\nimport AddRemoveButton from \"./AddRemoveButton\";\nimport MovieContext from \"../store/store\";\n\nconst Card = ({Title,Year,id,Type,Poster}) => {\n    const [UserData,setUserData] = useContext(MovieContext);\n\n    return (\n        <div className=\"card d-inline-flex m-card-width m-card-hover m-1 bg-dark\">\n            <Link to=\"/details\" onClick={()=>setUserData(Object.assign({},UserData,{MovieSelected: `${id}`}))}>\n                <img className=\"m-cardimg-height w-100\" alt='Error Loading' src={`${Poster}`}/>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title text-warning\">{Title}</h5>\n                    <p className=\"card-text text-light\">Year: {Year}</p>\n                    <p className=\"card-text text-light\">Type: {Type}</p>\n                </div>\n            </Link>\n            <a href={`https://www.imdb.com/title/${id}/`} rel=\"noopener noreferrer\" target=\"_blank\"\n               className=\"m-cardhyperLink-color\">Imdb ID: {id}</a>\n            <AddRemoveButton id={id}/>\n        </div>\n    );\n};\n\nexport default Card;","import React from 'react';\nimport Card from './card';\n\nconst Cardlist = ({ movies }) => {\n    return (\n        <div>\n            {\n                movies.map((user, i) => {\n                    return (\n                        <Card\n                            key={i}\n                            Title={movies[i].Title}\n                            Year={movies[i].Year}\n                            id={movies[i].imdbID}\n                            Type={movies[i].Type}\n                            Poster={movies[i].Poster}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n};\n\nexport default Cardlist;","import React, {useEffect,useContext} from 'react';\nimport PageTitle from \"../atoms/pageTitle\";\nimport Cardlist from \"../molecules/cardlist\";\nimport MovieContext from \"../store/store\";\n\nconst Favorites = () => {\n    const [UserData] = useContext(MovieContext);\n\n    //eslint-disable-next-line\n    useEffect (()=> {window.scrollTo(0,0)},[]);\n\n    return (!UserData.Favorites) ? (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Favorite Movies'}/>\n            <h2 className=\"text-warning\">No Favorites Stored</h2>\n        </div>\n    ) : (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Favorite Movies'}/>\n            <Cardlist movies={UserData.Favorites}/>\n        </div>\n    );\n};\n\nexport default Favorites;","import React from 'react';\n\nconst ShowResults = ({Results,Page,Total}) => {\n\n    let minResults=(Page-1)*(Results)+1;\n    let maxResults = Results*Page;\n\n    if (Results*Page>Total)\n        {maxResults=Total}\n\n    return <p className=\"text-warning\">Displaying Results: {minResults} through {maxResults}</p>\n};\n\nexport default ShowResults;","import React, { useState, useEffect,useRef,useContext} from 'react';\nimport Cardlist from \"../molecules/cardlist\";\nimport movieAPI from \"../atoms/movieAPI\";\nimport PageTitle from \"../atoms/pageTitle\";\nimport ShowResults from \"../atoms/ShowResults\";\nimport PageLoading from \"../atoms/pageLoading\";\nimport MovieContext from \"../store/store\";\n\nconst Home = () => {\n    const [UserData,setUserData] = useContext(MovieContext);\n    const [moviestoDisplay, setmoviestoDisplay] = useState(\"\");\n    const [PageArray,setPageArray]=useState([1]);\n    const ResultsArray=[10,20,50];\n    const [TotalResults,setTotalResults]=useState();\n    const [FetchSuccess,setFetchSuccess]=useState(false);\n    const [isLoading,setisLoading]=useState(false);\n    const filterTerm=useRef(\"\");\n    const [filteredMovies,setfilteredMovies]=useState([]);\n\n    async function getmovieData() {\n        setisLoading(true);\n        const rawData = await fetch(`https://www.omdbapi.com/?s=${UserData.SearchString}&apikey=${movieAPI}`)\n            .then(response => response.json());\n        setTotalResults(rawData.totalResults);\n\n        var wasFetchSuccess = (rawData.Response === \"True\");\n        setFetchSuccess(wasFetchSuccess);\n\n        const TotalPages = Math.ceil(rawData.totalResults/UserData.ResultsSelected);\n        let TotalPagesArray = [];\n        for (var i=1;i<=TotalPages;i++) {TotalPagesArray.push(i)}\n        setPageArray(TotalPagesArray);\n\n        let PagestoFetch = [];\n        const TotalFetches = Math.ceil(rawData.totalResults/10);\n        for (var z=(UserData.PageSelected-1)*(UserData.ResultsSelected/10)+1;z<=UserData.PageSelected*UserData.ResultsSelected/10;z++) {\n            if (z<=TotalFetches) {PagestoFetch.push(z)}}\n\n        let TotalMoviestoDisplay = [];\n        for (var q=0;q<PagestoFetch.length;q++) {\n            const MovieGrouping = await fetch(`https://www.omdbapi.com/?s=${UserData.SearchString}&page=${PagestoFetch[q]}&apikey=${movieAPI}`)\n                .then(response => response.json());\n            for (var d=0;d<MovieGrouping.Search.length;d++) {TotalMoviestoDisplay.push(MovieGrouping.Search[d])}}\n        setmoviestoDisplay(TotalMoviestoDisplay);\n        filterTerm.current = \"\";\n        setfilteredMovies(TotalMoviestoDisplay);\n        setisLoading(false);\n    }\n\n    //eslint-disable-next-line\n    useEffect (()=> {if (UserData.SearchString!==null) {getmovieData()} window.scrollTo(0,0)},[UserData.PageSelected,UserData.ResultsSelected]);\n\n    function onFilterChange (event) {\n        filterTerm.current = event.toLowerCase();\n        const FilteredMovieArray = moviestoDisplay.filter(movie=>{\n            return movie.Title.toLowerCase().includes(filterTerm.current);});\n        setfilteredMovies(FilteredMovieArray);\n    }\n\n\n    if (isLoading) {return(<PageLoading/>)}\n\n    return (!moviestoDisplay || !FetchSuccess) ? (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Search Movies'}/>\n            <input type=\"text\" size=\"15\" className=\"h6\"\n                   onChange={event=>setUserData(Object.assign({},UserData,{SearchString: event.target.value}))}\n                   onKeyPress={event=>{if (event.key === \"Enter\") {\n                       setUserData(Object.assign({},UserData,{PageSelected: 1}));\n                       getmovieData()}}}/>\n            <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\"\n                    onClick={()=>{\n                        setUserData(Object.assign({},UserData,{PageSelected: 1}));\n                        getmovieData()}}>Title Search</button>\n            <br/>\n            <h2 className=\"text-warning\">No Searches Matching: {UserData.SearchString}</h2>\n        </div>\n    ) : (\n        <div className=\"container-fluid p-padding text-center\">\n            <div className=\"row\">\n                <div className=\"col-xl-3\"></div>\n                <div className=\"col-xl-3 col-md-6\">\n                    <PageTitle Title={'Search Movies'}/>\n                    <input type=\"text\" placeholder=\"Enter a movie title\" className=\"h6\"\n                           onChange={event=>setUserData(Object.assign({},UserData,{SearchString: event.target.value}))}\n                           onKeyPress={event=>{if (event.key === \"Enter\") {\n                               setUserData(Object.assign({},UserData,{PageSelected: 1}));\n                               getmovieData()}}}/>\n                    <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-sm\"\n                                onClick={()=>{\n                                    setUserData(Object.assign({},UserData,{PageSelected: 1}));\n                                    getmovieData()}}>Title Search</button>\n                    <h5 className=\"text-white mt-2\" >Filter Title By:</h5>\n                    <input type=\"search\" placeholder=\"Enter filter term\" className=\"h6\" onChange={event=>onFilterChange(event.target.value)}/>\n                </div>\n                <div className=\"col-xl-3 col-md-6 text-md-left\">\n                    <p className=\"text-warning\">Total Search Results: {TotalResults}</p>\n                    <p className=\"text-warning\">Total Pages: {PageArray.length}</p>\n                    <label className=\"text-warning\">Results per Page:\n                        <select className=\"ml-1\" value={UserData.ResultsSelected}\n                                onChange={event => {\n                                    setUserData(Object.assign({},UserData,{PageSelected: 1}));\n                                    setUserData(Object.assign({},UserData,{ResultsSelected: event.target.value}))}}>\n                            {ResultsArray.map(item=>(<option key={item} value={item}>{item}</option>))}\n                        </select>\n                    </label>\n                    <br/>\n                    <label className=\"text-warning\"> Page:\n                        <select className=\"ml-1 my-2\" value={UserData.PageSelected} onChange={event =>\n                            setUserData(Object.assign({},UserData,{PageSelected: event.target.value}))}>\n                            {PageArray.map(item=>(<option key={item} value={item}>{item}</option>))}\n                        </select>\n                    </label>\n                    <p className=\"text-warning\">Searches Matching: \"{UserData.SearchString}\"</p>\n                    <ShowResults Page={UserData.PageSelected} Results={UserData.ResultsSelected} Total={TotalResults}/>\n                </div>\n                <div className=\"col-xl-3\"></div>\n            </div>\n            <Cardlist movies={filteredMovies}/>\n        </div>\n    )\n};\n\nexport default Home;","import React, {useState, useEffect,useContext} from 'react';\nimport movieAPI from \"../atoms/movieAPI\";\nimport PageTitle from \"../atoms/pageTitle\";\nimport AddRemoveButton from \"../molecules/AddRemoveButton\";\nimport \"./details.scss\";\nimport PageLoading from \"../atoms/pageLoading\";\nimport MovieContext from \"../store/store\";\n\nconst Details = () => {\n    const [UserData] = useContext(MovieContext);\n    const [movietoDisplay, setmovietoDisplay] = useState(null);\n    const [isLoading,setisLoading]=useState(false);\n\n    async function getmovieData() {\n        setisLoading(true);\n        const rawData = await fetch(`https://www.omdbapi.com/?i=${UserData.MovieSelected}&apikey=${movieAPI}`)\n            .then(response => response.json());\n        setmovietoDisplay(rawData);\n        setisLoading(false);\n    }\n\n    //eslint-disable-next-line\n    useEffect (()=> {getmovieData(); window.scrollTo(0,0)},[]);\n\n    if (isLoading) {return(<PageLoading/>)}\n\n    return (!movietoDisplay || !UserData.MovieSelected) ? (\n        <div className=\"container-fluid p-padding text-center\">\n            <PageTitle Title={'Movie Details'}/>\n            <h2 className=\"text-warning\">No Movie to Display</h2>\n        </div>\n    ) : (\n        <div className=\"container-fluid p-padding text-center \">\n            <PageTitle Title={'Movie Details'}/>\n            <img className=\"p-movieimage-height p-movieimage-width bg-dark\" alt='Error Loading' src={movietoDisplay.Poster}/><br/>\n            <AddRemoveButton id={movietoDisplay.imdbID}/>\n            <div className=\"row justify-content-center \">\n                <table className=\"table table-striped table-bordered text-white my-4 col-md-10 col-lg-6 bg-secondary\">\n                    <tbody>\n                    <tr className=\"h5 text-warning\">\n                        <td className=\"align-middle\">Title:</td>\n                        <td>{movietoDisplay.Title}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Type:</td>\n                        <td>{movietoDisplay.Type}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Released:</td>\n                        <td>{movietoDisplay.Released}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Runtime:</td>\n                        <td>{movietoDisplay.Runtime}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Rated:</td>\n                        <td>{movietoDisplay.Rated}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>Genre:</td>\n                        <td>{movietoDisplay.Genre}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Director(s):</td>\n                        <td>{movietoDisplay.Director}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Writer(s):</td>\n                        <td>{movietoDisplay.Writer}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Actor(s):</td>\n                        <td>{movietoDisplay.Actors}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td>imdb ID:</td>\n                        <td><a href={`https://www.imdb.com/title/${movietoDisplay.imdbID}/`} className=\"p-hyperLink-color\"\n                               rel=\"noopener noreferrer\" target=\"_blank\">{movietoDisplay.imdbID}</a></td>\n                    </tr >\n                    <tr className=\"h6\">\n                        <td>imdb Rating:</td>\n                        <td className=\"align-middle\">{movietoDisplay.imdbRating}</td>\n                    </tr>\n                    <tr className=\"h6\">\n                        <td className=\"align-middle\">Plot:</td>\n                        <td>{movietoDisplay.Plot}</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n};\n\nexport default Details;","import React from 'react';\n\nconst Footer=()=> {\n    let currentDate = new Date();\n    let currentYear = currentDate.getFullYear();\n\n    return (\n        <div className=\"text-white text-center bg-dark py-1 fixed-bottom\">\n            <small>Copyright &copy; Movie Gallery Website {currentYear.toString()}</small>\n        </div>\n    )\n};\n\nexport default Footer;","const particleOptions = {\n    particles: {\n        number: {\n            value: 80,\n            density: {\n                enable: true,\n                value_area: 800\n            }}}};\n\nexport default particleOptions;","import React,{useState} from 'react';\nimport {HashRouter as Router, Switch, Route} from \"react-router-dom\";\nimport MainNavBar from \"./organisms/MainNavBar\"\nimport Favorites from \"./pages/favorites\";\nimport Home from \"./pages/home\";\nimport Details from \"./pages/details\";\nimport Footer from \"./organisms/footer\";\nimport Particles from 'react-particles-js';\nimport particleOptions from \"./atoms/particleOptions\";\nimport MovieContext from \"./store/store\";\n\nconst App = () => {\n    const UserData = useState({\n        SearchString: \"star\",\n        Favorites: [],\n        MovieSelected: \"tt1663662\",\n        PageSelected: 1,\n        ResultsSelected: 10\n    });\n\n    return (\n        <MovieContext.Provider value={UserData}>\n            <Router>\n                <Particles className='p-particles' params={particleOptions}/>\n                <MainNavBar/>\n                <Switch>\n                    <Route path=\"/details\" component={Details}/>\n                    <Route path=\"/favorites\" component={Favorites}/>\n                    <Route path=\"/\" component={Home}/>\n                </Switch>\n                <Footer/>\n            </Router>\n        </MovieContext.Provider>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}